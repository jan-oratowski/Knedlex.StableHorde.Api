/*
 * Stable Horde
 *
 * The API documentation for the Stable Horde
 *
 * The version of the OpenAPI document: 2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = StableHorde.Api.Client.OpenAPIDateConverter;

namespace StableHorde.Api.Model
{
    /// <summary>
    /// UserDetailsStableAllOf
    /// </summary>
    [DataContract(Name = "UserDetailsStable_allOf")]
    public partial class UserDetailsStableAllOf : IEquatable<UserDetailsStableAllOf>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UserDetailsStableAllOf" /> class.
        /// </summary>
        /// <param name="kudosDetails">kudosDetails.</param>
        /// <param name="usage">usage.</param>
        /// <param name="contributions">contributions.</param>
        public UserDetailsStableAllOf(UserKudosDetails kudosDetails = default(UserKudosDetails), UsageDetailsStable usage = default(UsageDetailsStable), ContributionsDetailsStable contributions = default(ContributionsDetailsStable))
        {
            this.KudosDetails = kudosDetails;
            this.Usage = usage;
            this.Contributions = contributions;
        }

        /// <summary>
        /// Gets or Sets KudosDetails
        /// </summary>
        [DataMember(Name = "kudos_details", EmitDefaultValue = false)]
        public UserKudosDetails KudosDetails { get; set; }

        /// <summary>
        /// Gets or Sets Usage
        /// </summary>
        [DataMember(Name = "usage", EmitDefaultValue = false)]
        public UsageDetailsStable Usage { get; set; }

        /// <summary>
        /// Gets or Sets Contributions
        /// </summary>
        [DataMember(Name = "contributions", EmitDefaultValue = false)]
        public ContributionsDetailsStable Contributions { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UserDetailsStableAllOf {\n");
            sb.Append("  KudosDetails: ").Append(KudosDetails).Append("\n");
            sb.Append("  Usage: ").Append(Usage).Append("\n");
            sb.Append("  Contributions: ").Append(Contributions).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UserDetailsStableAllOf);
        }

        /// <summary>
        /// Returns true if UserDetailsStableAllOf instances are equal
        /// </summary>
        /// <param name="input">Instance of UserDetailsStableAllOf to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UserDetailsStableAllOf input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.KudosDetails == input.KudosDetails ||
                    (this.KudosDetails != null &&
                    this.KudosDetails.Equals(input.KudosDetails))
                ) && 
                (
                    this.Usage == input.Usage ||
                    (this.Usage != null &&
                    this.Usage.Equals(input.Usage))
                ) && 
                (
                    this.Contributions == input.Contributions ||
                    (this.Contributions != null &&
                    this.Contributions.Equals(input.Contributions))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.KudosDetails != null)
                {
                    hashCode = (hashCode * 59) + this.KudosDetails.GetHashCode();
                }
                if (this.Usage != null)
                {
                    hashCode = (hashCode * 59) + this.Usage.GetHashCode();
                }
                if (this.Contributions != null)
                {
                    hashCode = (hashCode * 59) + this.Contributions.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
