/*
 * AI Horde
 *
 * The API documentation for the AI Horde
 *
 * The version of the OpenAPI document: 2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Knedlex.StableHorde.Api.Client.OpenAPIDateConverter;

namespace Knedlex.StableHorde.Api.Model
{
    /// <summary>
    /// Newspiece
    /// </summary>
    [DataContract(Name = "Newspiece")]
    public partial class Newspiece : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Newspiece" /> class.
        /// </summary>
        /// <param name="datePublished">The date this newspiece was published..</param>
        /// <param name="varNewspiece">The actual piece of news..</param>
        /// <param name="importance">How critical this piece of news is..</param>
        public Newspiece(string datePublished = default(string), string varNewspiece = default(string), string importance = default(string))
        {
            this.DatePublished = datePublished;
            this.VarNewspiece = varNewspiece;
            this.Importance = importance;
        }

        /// <summary>
        /// The date this newspiece was published.
        /// </summary>
        /// <value>The date this newspiece was published.</value>
        [DataMember(Name = "date_published", EmitDefaultValue = false)]
        public string DatePublished { get; set; }

        /// <summary>
        /// The actual piece of news.
        /// </summary>
        /// <value>The actual piece of news.</value>
        [DataMember(Name = "newspiece", EmitDefaultValue = false)]
        public string VarNewspiece { get; set; }

        /// <summary>
        /// How critical this piece of news is.
        /// </summary>
        /// <value>How critical this piece of news is.</value>
        /// <example>Information</example>
        [DataMember(Name = "importance", EmitDefaultValue = false)]
        public string Importance { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Newspiece {\n");
            sb.Append("  DatePublished: ").Append(DatePublished).Append("\n");
            sb.Append("  VarNewspiece: ").Append(VarNewspiece).Append("\n");
            sb.Append("  Importance: ").Append(Importance).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
