/*
 * AI Horde
 *
 * The API documentation for the AI Horde
 *
 * The version of the OpenAPI document: 2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Knedlex.StableHorde.Api.Client.OpenAPIDateConverter;

namespace Knedlex.StableHorde.Api.Model
{
    /// <summary>
    /// InterrogationFormStatus
    /// </summary>
    [DataContract(Name = "InterrogationFormStatus")]
    public partial class InterrogationFormStatus : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InterrogationFormStatus" /> class.
        /// </summary>
        /// <param name="form">The name of this interrogation form..</param>
        /// <param name="state">The overall status of this interrogation..</param>
        /// <param name="result">result.</param>
        public InterrogationFormStatus(string form = default(string), string state = default(string), InterrogationFormResult result = default(InterrogationFormResult))
        {
            this.Form = form;
            this.State = state;
            this.Result = result;
        }

        /// <summary>
        /// The name of this interrogation form.
        /// </summary>
        /// <value>The name of this interrogation form.</value>
        [DataMember(Name = "form", EmitDefaultValue = false)]
        public string Form { get; set; }

        /// <summary>
        /// The overall status of this interrogation.
        /// </summary>
        /// <value>The overall status of this interrogation.</value>
        [DataMember(Name = "state", EmitDefaultValue = false)]
        public string State { get; set; }

        /// <summary>
        /// Gets or Sets Result
        /// </summary>
        [DataMember(Name = "result", EmitDefaultValue = false)]
        public InterrogationFormResult Result { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class InterrogationFormStatus {\n");
            sb.Append("  Form: ").Append(Form).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  Result: ").Append(Result).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
