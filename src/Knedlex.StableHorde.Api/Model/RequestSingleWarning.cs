/*
 * AI Horde
 *
 * The API documentation for the AI Horde
 *
 * The version of the OpenAPI document: 2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Knedlex.StableHorde.Api.Client.OpenAPIDateConverter;

namespace Knedlex.StableHorde.Api.Model
{
    /// <summary>
    /// RequestSingleWarning
    /// </summary>
    [DataContract(Name = "RequestSingleWarning")]
    public partial class RequestSingleWarning : IValidatableObject
    {
        /// <summary>
        /// A unique identifier for this warning.
        /// </summary>
        /// <value>A unique identifier for this warning.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum CodeEnum
        {
            /// <summary>
            /// Enum NoAvailableWorker for value: NoAvailableWorker
            /// </summary>
            [EnumMember(Value = "NoAvailableWorker")]
            NoAvailableWorker = 1,

            /// <summary>
            /// Enum ClipSkipMismatch for value: ClipSkipMismatch
            /// </summary>
            [EnumMember(Value = "ClipSkipMismatch")]
            ClipSkipMismatch = 2,

            /// <summary>
            /// Enum StepsTooFew for value: StepsTooFew
            /// </summary>
            [EnumMember(Value = "StepsTooFew")]
            StepsTooFew = 3,

            /// <summary>
            /// Enum StepsTooMany for value: StepsTooMany
            /// </summary>
            [EnumMember(Value = "StepsTooMany")]
            StepsTooMany = 4,

            /// <summary>
            /// Enum CfgScaleMismatch for value: CfgScaleMismatch
            /// </summary>
            [EnumMember(Value = "CfgScaleMismatch")]
            CfgScaleMismatch = 5,

            /// <summary>
            /// Enum CfgScaleTooSmall for value: CfgScaleTooSmall
            /// </summary>
            [EnumMember(Value = "CfgScaleTooSmall")]
            CfgScaleTooSmall = 6,

            /// <summary>
            /// Enum CfgScaleTooLarge for value: CfgScaleTooLarge
            /// </summary>
            [EnumMember(Value = "CfgScaleTooLarge")]
            CfgScaleTooLarge = 7,

            /// <summary>
            /// Enum SamplerMismatch for value: SamplerMismatch
            /// </summary>
            [EnumMember(Value = "SamplerMismatch")]
            SamplerMismatch = 8,

            /// <summary>
            /// Enum SchedulerMismatch for value: SchedulerMismatch
            /// </summary>
            [EnumMember(Value = "SchedulerMismatch")]
            SchedulerMismatch = 9
        }


        /// <summary>
        /// A unique identifier for this warning.
        /// </summary>
        /// <value>A unique identifier for this warning.</value>
        /// <example>NoAvailableWorker</example>
        [DataMember(Name = "code", EmitDefaultValue = false)]
        public CodeEnum? Code { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="RequestSingleWarning" /> class.
        /// </summary>
        /// <param name="code">A unique identifier for this warning..</param>
        /// <param name="message">Something that you should be aware about this request, in plain text..</param>
        public RequestSingleWarning(CodeEnum? code = default(CodeEnum?), string message = default(string))
        {
            this.Code = code;
            this.Message = message;
        }

        /// <summary>
        /// Something that you should be aware about this request, in plain text.
        /// </summary>
        /// <value>Something that you should be aware about this request, in plain text.</value>
        [DataMember(Name = "message", EmitDefaultValue = false)]
        public string Message { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RequestSingleWarning {\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
