/*
 * AI Horde
 *
 * The API documentation for the AI Horde
 *
 * The version of the OpenAPI document: 2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Knedlex.StableHorde.Api.Model;
using Knedlex.StableHorde.Api.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Knedlex.StableHorde.Api.Test.Model
{
    /// <summary>
    ///  Class for testing RequestStatusCheck
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class RequestStatusCheckTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for RequestStatusCheck
        //private RequestStatusCheck instance;

        public RequestStatusCheckTests()
        {
            // TODO uncomment below to create an instance of RequestStatusCheck
            //instance = new RequestStatusCheck();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RequestStatusCheck
        /// </summary>
        [Fact]
        public void RequestStatusCheckInstanceTest()
        {
            // TODO uncomment below to test "IsType" RequestStatusCheck
            //Assert.IsType<RequestStatusCheck>(instance);
        }

        /// <summary>
        /// Test the property 'Finished'
        /// </summary>
        [Fact]
        public void FinishedTest()
        {
            // TODO unit test for the property 'Finished'
        }

        /// <summary>
        /// Test the property 'Processing'
        /// </summary>
        [Fact]
        public void ProcessingTest()
        {
            // TODO unit test for the property 'Processing'
        }

        /// <summary>
        /// Test the property 'Restarted'
        /// </summary>
        [Fact]
        public void RestartedTest()
        {
            // TODO unit test for the property 'Restarted'
        }

        /// <summary>
        /// Test the property 'Waiting'
        /// </summary>
        [Fact]
        public void WaitingTest()
        {
            // TODO unit test for the property 'Waiting'
        }

        /// <summary>
        /// Test the property 'Done'
        /// </summary>
        [Fact]
        public void DoneTest()
        {
            // TODO unit test for the property 'Done'
        }

        /// <summary>
        /// Test the property 'Faulted'
        /// </summary>
        [Fact]
        public void FaultedTest()
        {
            // TODO unit test for the property 'Faulted'
        }

        /// <summary>
        /// Test the property 'WaitTime'
        /// </summary>
        [Fact]
        public void WaitTimeTest()
        {
            // TODO unit test for the property 'WaitTime'
        }

        /// <summary>
        /// Test the property 'QueuePosition'
        /// </summary>
        [Fact]
        public void QueuePositionTest()
        {
            // TODO unit test for the property 'QueuePosition'
        }

        /// <summary>
        /// Test the property 'Kudos'
        /// </summary>
        [Fact]
        public void KudosTest()
        {
            // TODO unit test for the property 'Kudos'
        }

        /// <summary>
        /// Test the property 'IsPossible'
        /// </summary>
        [Fact]
        public void IsPossibleTest()
        {
            // TODO unit test for the property 'IsPossible'
        }
    }
}
