/*
 * AI Horde
 *
 * The API documentation for the AI Horde
 *
 * The version of the OpenAPI document: 2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Knedlex.StableHorde.Api.Model;
using Knedlex.StableHorde.Api.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Knedlex.StableHorde.Api.Test.Model
{
    /// <summary>
    ///  Class for testing ModelPayloadRootStable
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ModelPayloadRootStableTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ModelPayloadRootStable
        //private ModelPayloadRootStable instance;

        public ModelPayloadRootStableTests()
        {
            // TODO uncomment below to create an instance of ModelPayloadRootStable
            //instance = new ModelPayloadRootStable();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ModelPayloadRootStable
        /// </summary>
        [Fact]
        public void ModelPayloadRootStableInstanceTest()
        {
            // TODO uncomment below to test "IsType" ModelPayloadRootStable
            //Assert.IsType<ModelPayloadRootStable>(instance);
        }

        /// <summary>
        /// Test the property 'SamplerName'
        /// </summary>
        [Fact]
        public void SamplerNameTest()
        {
            // TODO unit test for the property 'SamplerName'
        }

        /// <summary>
        /// Test the property 'CfgScale'
        /// </summary>
        [Fact]
        public void CfgScaleTest()
        {
            // TODO unit test for the property 'CfgScale'
        }

        /// <summary>
        /// Test the property 'DenoisingStrength'
        /// </summary>
        [Fact]
        public void DenoisingStrengthTest()
        {
            // TODO unit test for the property 'DenoisingStrength'
        }

        /// <summary>
        /// Test the property 'Seed'
        /// </summary>
        [Fact]
        public void SeedTest()
        {
            // TODO unit test for the property 'Seed'
        }

        /// <summary>
        /// Test the property 'Height'
        /// </summary>
        [Fact]
        public void HeightTest()
        {
            // TODO unit test for the property 'Height'
        }

        /// <summary>
        /// Test the property 'Width'
        /// </summary>
        [Fact]
        public void WidthTest()
        {
            // TODO unit test for the property 'Width'
        }

        /// <summary>
        /// Test the property 'SeedVariation'
        /// </summary>
        [Fact]
        public void SeedVariationTest()
        {
            // TODO unit test for the property 'SeedVariation'
        }

        /// <summary>
        /// Test the property 'PostProcessing'
        /// </summary>
        [Fact]
        public void PostProcessingTest()
        {
            // TODO unit test for the property 'PostProcessing'
        }

        /// <summary>
        /// Test the property 'Karras'
        /// </summary>
        [Fact]
        public void KarrasTest()
        {
            // TODO unit test for the property 'Karras'
        }

        /// <summary>
        /// Test the property 'Tiling'
        /// </summary>
        [Fact]
        public void TilingTest()
        {
            // TODO unit test for the property 'Tiling'
        }

        /// <summary>
        /// Test the property 'HiresFix'
        /// </summary>
        [Fact]
        public void HiresFixTest()
        {
            // TODO unit test for the property 'HiresFix'
        }

        /// <summary>
        /// Test the property 'ClipSkip'
        /// </summary>
        [Fact]
        public void ClipSkipTest()
        {
            // TODO unit test for the property 'ClipSkip'
        }

        /// <summary>
        /// Test the property 'ControlType'
        /// </summary>
        [Fact]
        public void ControlTypeTest()
        {
            // TODO unit test for the property 'ControlType'
        }

        /// <summary>
        /// Test the property 'ImageIsControl'
        /// </summary>
        [Fact]
        public void ImageIsControlTest()
        {
            // TODO unit test for the property 'ImageIsControl'
        }

        /// <summary>
        /// Test the property 'ReturnControlMap'
        /// </summary>
        [Fact]
        public void ReturnControlMapTest()
        {
            // TODO unit test for the property 'ReturnControlMap'
        }

        /// <summary>
        /// Test the property 'FacefixerStrength'
        /// </summary>
        [Fact]
        public void FacefixerStrengthTest()
        {
            // TODO unit test for the property 'FacefixerStrength'
        }

        /// <summary>
        /// Test the property 'Loras'
        /// </summary>
        [Fact]
        public void LorasTest()
        {
            // TODO unit test for the property 'Loras'
        }

        /// <summary>
        /// Test the property 'Tis'
        /// </summary>
        [Fact]
        public void TisTest()
        {
            // TODO unit test for the property 'Tis'
        }

        /// <summary>
        /// Test the property 'Special'
        /// </summary>
        [Fact]
        public void SpecialTest()
        {
            // TODO unit test for the property 'Special'
        }
    }
}
