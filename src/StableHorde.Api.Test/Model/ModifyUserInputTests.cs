/*
 * AI Horde
 *
 * The API documentation for the AI Horde
 *
 * The version of the OpenAPI document: 2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using StableHorde.Api.Api;
using StableHorde.Api.Model;
using StableHorde.Api.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace StableHorde.Api.Test.Model
{
    /// <summary>
    ///  Class for testing ModifyUserInput
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ModifyUserInputTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ModifyUserInput
        //private ModifyUserInput instance;

        public ModifyUserInputTests()
        {
            // TODO uncomment below to create an instance of ModifyUserInput
            //instance = new ModifyUserInput();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ModifyUserInput
        /// </summary>
        [Fact]
        public void ModifyUserInputInstanceTest()
        {
            // TODO uncomment below to test "IsType" ModifyUserInput
            //Assert.IsType<ModifyUserInput>(instance);
        }


        /// <summary>
        /// Test the property 'Kudos'
        /// </summary>
        [Fact]
        public void KudosTest()
        {
            // TODO unit test for the property 'Kudos'
        }
        /// <summary>
        /// Test the property 'Concurrency'
        /// </summary>
        [Fact]
        public void ConcurrencyTest()
        {
            // TODO unit test for the property 'Concurrency'
        }
        /// <summary>
        /// Test the property 'UsageMultiplier'
        /// </summary>
        [Fact]
        public void UsageMultiplierTest()
        {
            // TODO unit test for the property 'UsageMultiplier'
        }
        /// <summary>
        /// Test the property 'WorkerInvited'
        /// </summary>
        [Fact]
        public void WorkerInvitedTest()
        {
            // TODO unit test for the property 'WorkerInvited'
        }
        /// <summary>
        /// Test the property 'Moderator'
        /// </summary>
        [Fact]
        public void ModeratorTest()
        {
            // TODO unit test for the property 'Moderator'
        }
        /// <summary>
        /// Test the property 'PublicWorkers'
        /// </summary>
        [Fact]
        public void PublicWorkersTest()
        {
            // TODO unit test for the property 'PublicWorkers'
        }
        /// <summary>
        /// Test the property 'MonthlyKudos'
        /// </summary>
        [Fact]
        public void MonthlyKudosTest()
        {
            // TODO unit test for the property 'MonthlyKudos'
        }
        /// <summary>
        /// Test the property 'Username'
        /// </summary>
        [Fact]
        public void UsernameTest()
        {
            // TODO unit test for the property 'Username'
        }
        /// <summary>
        /// Test the property 'Trusted'
        /// </summary>
        [Fact]
        public void TrustedTest()
        {
            // TODO unit test for the property 'Trusted'
        }
        /// <summary>
        /// Test the property 'Flagged'
        /// </summary>
        [Fact]
        public void FlaggedTest()
        {
            // TODO unit test for the property 'Flagged'
        }
        /// <summary>
        /// Test the property 'Customizer'
        /// </summary>
        [Fact]
        public void CustomizerTest()
        {
            // TODO unit test for the property 'Customizer'
        }
        /// <summary>
        /// Test the property 'Vpn'
        /// </summary>
        [Fact]
        public void VpnTest()
        {
            // TODO unit test for the property 'Vpn'
        }
        /// <summary>
        /// Test the property 'Service'
        /// </summary>
        [Fact]
        public void ServiceTest()
        {
            // TODO unit test for the property 'Service'
        }
        /// <summary>
        /// Test the property 'Education'
        /// </summary>
        [Fact]
        public void EducationTest()
        {
            // TODO unit test for the property 'Education'
        }
        /// <summary>
        /// Test the property 'Special'
        /// </summary>
        [Fact]
        public void SpecialTest()
        {
            // TODO unit test for the property 'Special'
        }
        /// <summary>
        /// Test the property 'Filtered'
        /// </summary>
        [Fact]
        public void FilteredTest()
        {
            // TODO unit test for the property 'Filtered'
        }
        /// <summary>
        /// Test the property 'ResetSuspicion'
        /// </summary>
        [Fact]
        public void ResetSuspicionTest()
        {
            // TODO unit test for the property 'ResetSuspicion'
        }
        /// <summary>
        /// Test the property 'Contact'
        /// </summary>
        [Fact]
        public void ContactTest()
        {
            // TODO unit test for the property 'Contact'
        }
        /// <summary>
        /// Test the property 'AdminComment'
        /// </summary>
        [Fact]
        public void AdminCommentTest()
        {
            // TODO unit test for the property 'AdminComment'
        }

    }

}
