openapi: 3.0.1
info:
  description: The API documentation for the AI Horde
  title: AI Horde
  version: "2.0"
servers:
- url: /api
tags:
- description: API Version 2
  name: v2
paths:
  /v2/filters:
    get:
      operationId: get_filters
      parameters:
      - description: A mod API key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: The filter type.
        in: query
        name: filter_type
        schema:
          type: integer
      - description: Only return filter containing this word.
        in: query
        name: contains
        schema:
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Validation Error
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FilterDetails'
                type: array
          description: Filters List
      summary: "Moderator Only: A List all filters, or filtered by the query"
      tags:
      - v2
    post:
      operationId: post_filters
      parameters:
      - description: A mod API key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_filters_request'
        required: true
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Validation Error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterPromptSuspicion'
          description: Returns the suspicion of the provided prompt. A suspicion of
            2 or more means it would be blocked.
      summary: "Moderator Only: Check The suspicion of the provided prompt"
      tags:
      - v2
      x-codegen-request-body-name: payload
    put:
      operationId: put_filters
      parameters:
      - description: A mod API key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutNewFilter'
        required: true
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Validation Error
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterDetails'
          description: New Filter details
      summary: "Moderator Only: Add a new regex filter"
      tags:
      - v2
      x-codegen-request-body-name: payload
  /v2/filters/regex:
    get:
      operationId: get_filter_regex
      parameters:
      - description: A mod API key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: The filter type.
        in: query
        name: filter_type
        schema:
          type: integer
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Validation Error
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FilterRegex'
                type: array
          description: Filters Regex
      summary: "Moderator Only: A List all filters, or filtered by the query"
      tags:
      - v2
  /v2/filters/{filter_id}:
    delete:
      operationId: delete_filter_single
      parameters:
      - in: path
        name: filter_id
        required: true
        schema:
          type: string
      - description: A mod API key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Validation Error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleResponse'
          description: Filter Deleted
      summary: "Moderator Only: Delete a regex filter"
      tags:
      - v2
    get:
      operationId: get_filter_single
      parameters:
      - in: path
        name: filter_id
        required: true
        schema:
          type: string
      - description: A mod API key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Validation Error
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FilterDetails'
                type: array
          description: Filters List
      summary: "Moderator Only: Display a single filter"
      tags:
      - v2
    patch:
      operationId: patch_filter_single
      parameters:
      - in: path
        name: filter_id
        required: true
        schema:
          type: string
      - description: A mod API key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchExistingFilter'
        required: true
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Validation Error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterDetails'
          description: Patched Filter details
      summary: "Moderator Only: Modify an existing regex filter"
      tags:
      - v2
      x-codegen-request-body-name: payload
  /v2/find_user:
    get:
      description: This can be used to verify a user exists
      operationId: get_find_user
      parameters:
      - description: User API key we're looking for.
        in: header
        name: apikey
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: User Not Found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Validation Error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: Worker Details
      summary: Lookup user details based on their API key
      tags:
      - v2
  /v2/generate/async:
    post:
      description: |-
        This endpoint will immediately return with the UUID of the request for generation.
        This endpoint will always be accepted, even if there are no workers available currently to fulfill this request.
        Perhaps some will appear in the next 10 minutes.
        Asynchronous requests live for 10 minutes before being considered stale and being deleted.
      operationId: post_image_async_generate
      parameters:
      - description: The API Key corresponding to a registered user.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: The client name and version
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerationInputStable'
        required: true
      responses:
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Too Many Prompts
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maintenance Mode
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationError'
          description: Validation Error
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestAsync'
          description: Generation Queued
      summary: Initiate an Asynchronous request to generate images
      tags:
      - v2
      x-codegen-request-body-name: payload
  /v2/generate/check/{id}:
    get:
      description: Use this request to check the status of a currently running asynchronous
        request without consuming bandwidth.
      operationId: get_image_async_check
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - description: The client name and version
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Request Not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestStatusCheck'
          description: Async Request Status Check
      summary: Retrieve the status of an Asynchronous generation request without images
      tags:
      - v2
  /v2/generate/pop:
    post:
      description: This endpoint is used by registered workers only
      operationId: post_image_job_pop
      parameters:
      - description: The API Key corresponding to a registered user.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PopInputStable'
        required: true
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Validation Error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerationPayloadStable'
          description: Generation Popped
      summary: Check if there are generation requests queued for fulfillment
      tags:
      - v2
      x-codegen-request-body-name: payload
  /v2/generate/rate/{id}:
    post:
      description: |-
        AI
        The request has to have been sent as shared: true.
        You can select the best image in the set, and/or provide a rating for each or some images in the set.
        If you select best-of image, you will gain 4 kudos. Each rating is 5 kudos. Best-of will be ignored when ratings conflict with it.
        You can never gain more kudos than you spent for this generation. Your reward at max will be your kudos consumption - 1.
      operationId: post_aesthetics
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - description: The client name and version
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AestheticsPayload'
        required: true
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Generation Request Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Aesthetics Already Submitted
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerationSubmitted'
          description: Aesthetics Submitted
      summary: Submit aesthetic ratings for generated images to be used by LAION and
        Stability
      tags:
      - v2
      x-codegen-request-body-name: payload
  /v2/generate/status/{id}:
    delete:
      description: This request will include all already generated images in base64
        encoded .webp files.
      operationId: delete_image_async_status
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - description: The client name and version
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Request Not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestStatusStable'
          description: Async Request Full Status
      summary: Cancel an unfinished request
      tags:
      - v2
    get:
      description: |-
        This request will include all already generated images in download URL or base64 encoded .webp files.
        As such, you are requested to not retrieve this endpoint often. Instead use the /check/ endpoint first
        This endpoint is limited to 10 request per minute
      operationId: get_image_async_status
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - description: The client name and version
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Request Not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestStatusStable'
          description: Async Request Full Status
      summary: Retrieve the full status of an Asynchronous generation request
      tags:
      - v2
  /v2/generate/submit:
    post:
      description: This endpoint is used by registered workers only
      operationId: post_image_job_submit
      parameters:
      - description: The worker's owner API key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitInputStable'
        required: true
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Request Not Found
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Generation Already Submitted
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerationSubmitted'
          description: Generation Submitted
      summary: Submit a generated image
      tags:
      - v2
      x-codegen-request-body-name: payload
  /v2/generate/text/async:
    post:
      description: |-
        This endpoint will immediately return with the UUID of the request for generation.
        This endpoint will always be accepted, even if there are no workers available currently to fulfill this request.
        Perhaps some will appear in the next 20 minutes.
        Asynchronous requests live for 20 minutes before being considered stale and being deleted.
      operationId: post_text_async_generate
      parameters:
      - description: The API Key corresponding to a registered user.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: The client name and version
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerationInputKobold'
        required: true
      responses:
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Too Many Prompts
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maintenance Mode
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidationError'
          description: Validation Error
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestAsync'
          description: Generation Queued
      summary: Initiate an Asynchronous request to generate text
      tags:
      - v2
      x-codegen-request-body-name: payload
  /v2/generate/text/pop:
    post:
      description: This endpoint is used by registered workers only
      operationId: post_text_job_pop
      parameters:
      - description: The API Key corresponding to a registered user.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PopInputKobold'
        required: true
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Validation Error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerationPayload'
          description: Generation Popped
      summary: Check if there are generation requests queued for fulfillment
      tags:
      - v2
      x-codegen-request-body-name: payload
  /v2/generate/text/status/{id}:
    delete:
      description: This request will include all already generated texts.
      operationId: delete_text_async_status
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - description: The client name and version
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Request Not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestStatusKobold'
          description: Async Request Full Status
      summary: Cancel an unfinished request
      tags:
      - v2
    get:
      description: This request will include all already generated texts.
      operationId: get_text_async_status
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - description: The client name and version
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Request Not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestStatusKobold'
          description: Async Request Full Status
      summary: Retrieve the full status of an Asynchronous generation request
      tags:
      - v2
  /v2/generate/text/submit:
    post:
      description: This endpoint is used by registered workers only
      operationId: post_text_job_submit
      parameters:
      - description: The worker's owner API key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitInputKobold'
        required: true
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Request Not Found
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Generation Already Submitted
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerationSubmitted'
          description: Generation Submitted
      summary: Submit generated text
      tags:
      - v2
      x-codegen-request-body-name: payload
  /v2/interrogate/async:
    post:
      description: |-
        This endpoint will immediately return with the UUID of the request for interrogation.
        This endpoint will always be accepted, even if there are no workers available currently to fulfill this request.
        Perhaps some will appear in the next 20 minutes.
        Asynchronous requests live for 20 minutes before being considered stale and being deleted.
      operationId: post_interrogate
      parameters:
      - description: A User API key
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: The client name and version
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelInterrogationInputStable'
        required: true
      responses:
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Too Many Prompts
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Maintenance Mode
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Validation Error
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestInterrogationResponse'
          description: Interrogation Queued
      summary: Initiate an Asynchronous request to interrogate an image
      tags:
      - v2
      x-codegen-request-body-name: payload
  /v2/interrogate/pop:
    post:
      description: This endpoint is used by registered workers only
      operationId: post_interrogate_pop
      parameters:
      - description: The API Key corresponding to a registered user
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterrogationPopInput'
        required: true
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Validation Error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterrogationPopPayload'
          description: Interrogation Popped
      summary: Check if there are interrogation requests queued for fulfillment
      tags:
      - v2
      x-codegen-request-body-name: payload
  /v2/interrogate/status/{id}:
    delete:
      description: This request will return all already interrogated image results.
      operationId: delete_interrogation_status
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - description: The client name and version
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Request Not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterrogationStatus'
          description: Interrogation Request Status
      summary: Cancel an unfinished interrogation request
      tags:
      - v2
    get:
      description: |-
        This request will include all already generated images.
        As such, you are requested to not retrieve this endpoint often. Instead use the /check/ endpoint first
      operationId: get_interrogation_status
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - description: The client name and version
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Request Not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterrogationStatus'
          description: Interrogation Request Status
      summary: Retrieve the full status of an interrogation request
      tags:
      - v2
  /v2/interrogate/submit:
    post:
      description: This endpoint is used by registered workers only
      operationId: post_interrogate_submit
      parameters:
      - description: The worker's owner API key
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_interrogate_submit_request'
        required: true
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Request Not Found
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Generation Already Submitted
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerationSubmitted'
          description: Interrogation Submitted
      summary: Submit the results of an interrogated image
      tags:
      - v2
      x-codegen-request-body-name: payload
  /v2/kudos/award:
    post:
      description: This API can only be used through privileged access.
      operationId: post_award_kudos
      parameters:
      - description: The sending user's API key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_award_kudos_request'
        required: true
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Validation Error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KudosAwarded'
          description: Kudos Awarded
      summary: Awards Kudos to registed user
      tags:
      - v2
      x-codegen-request-body-name: payload
  /v2/kudos/transfer:
    post:
      operationId: post_transfer_kudos
      parameters:
      - description: The sending user's API key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_award_kudos_request'
        required: true
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Validation Error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KudosTransferred'
          description: Kudos Transferred
      summary: Transfer Kudos to another registed user
      tags:
      - v2
      x-codegen-request-body-name: payload
  /v2/operations/block_worker_ipaddr/{worker_id}:
    delete:
      description: Only usable by horde moderators
      operationId: delete_operations_block_worker_ip
      parameters:
      - in: path
        name: worker_id
        required: true
        schema:
          type: string
      - description: A mod API key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Validation Error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleResponse'
          description: Operation Completed
      summary: Remove a worker's IP block
      tags:
      - v2
    put:
      description: Only usable by horde moderators
      operationId: put_operations_block_worker_ip
      parameters:
      - in: path
        name: worker_id
        required: true
        schema:
          type: string
      - description: A mod API key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddWorkerTimeout'
        required: true
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Validation Error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleResponse'
          description: Operation Completed
      summary: Block worker's from a specific IP for 24 hours
      tags:
      - v2
      x-codegen-request-body-name: payload
  /v2/operations/ipaddr:
    delete:
      description: Only usable by horde moderators
      operationId: delete_operations_ip
      parameters:
      - description: A mod API key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTimeoutIPInput'
        required: true
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Validation Error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleResponse'
          description: Operation Completed
      summary: Remove an IP from timeout
      tags:
      - v2
      x-codegen-request-body-name: payload
    get:
      operationId: get_operations_ip
      parameters:
      - description: A mod API key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Validation Error
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IPTimeout'
                type: array
          description: An IP timeout entry
      summary: Return all existing IP Block timeouts
      tags:
      - v2
    post:
      description: Only usable by horde moderators
      operationId: post_operations_ip
      parameters:
      - description: A mod API key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTimeoutIPInput'
        required: true
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Validation Error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleResponse'
          description: Operation Completed
      summary: Add an IP or CIDR to timeout
      tags:
      - v2
      x-codegen-request-body-name: payload
  /v2/operations/ipaddr/{ipaddr}:
    get:
      operationId: get_operations_ip_single
      parameters:
      - in: path
        name: ipaddr
        required: true
        schema:
          type: string
      - description: A mod API key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Validation Error
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IPTimeout'
                type: array
          description: IP timeout entries that match IP
      summary: Check if an IP or CIDR is in timeout
      tags:
      - v2
  /v2/sharedkeys:
    put:
      operationId: put_shared_key
      parameters:
      - description: User API key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedKeyInput'
        required: true
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Shared Key Not Found
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Validation Error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedKeyDetails'
          description: SharedKey Details
      summary: Create a new SharedKey for this user
      tags:
      - v2
      x-codegen-request-body-name: payload
  /v2/sharedkeys/{sharedkey_id}:
    delete:
      operationId: delete_shared_key_single
      parameters:
      - in: path
        name: sharedkey_id
        required: true
        schema:
          type: string
      - description: User API key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Shared Key Not Found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleResponse'
          description: Shared Key Deleted
      summary: Delete an existing SharedKey for this user
      tags:
      - v2
    get:
      operationId: get_shared_key_single
      parameters:
      - in: path
        name: sharedkey_id
        required: true
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Shared Key Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedKeyDetails'
          description: Shared Key Details
      summary: Get details about an existing Shared Key
      tags:
      - v2
    patch:
      operationId: patch_shared_key_single
      parameters:
      - in: path
        name: sharedkey_id
        required: true
        schema:
          type: string
      - description: User API key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: The client name and version
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedKeyInput'
        required: true
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Shared Key Not Found
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Validation Error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedKeyDetails'
          description: Shared Key Details
      summary: Modify an existing Shared Key
      tags:
      - v2
      x-codegen-request-body-name: payload
  /v2/stats/img/models:
    get:
      operationId: get_image_horde_stats_models
      parameters:
      - description: The client name and version
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImgModelStats'
          description: AI Horde generated images statistics per model
      summary: "Details how many images were generated per model for the past day,\
        \ month and total"
      tags:
      - v2
  /v2/stats/img/totals:
    get:
      description: Also shows the amount of pixelsteps for the same timeframe.
      operationId: get_image_horde_stats_totals
      parameters:
      - description: The client name and version
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatsImgTotals'
          description: AI Horde generated images statistics
      summary: "Details how many images have been generated in the past minux,hour,day,month\
        \ and total"
      tags:
      - v2
  /v2/stats/text/models:
    get:
      operationId: get_text_horde_stats_models
      parameters:
      - description: The client name and version
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TxtModelStats'
          description: AI Horde generated text statistics per model
      summary: "Details how many texts were generated per model for the past day,\
        \ month and total"
      tags:
      - v2
  /v2/stats/text/totals:
    get:
      description: Also shows the amount of pixelsteps for the same timeframe.
      operationId: get_text_horde_stats_totals
      parameters:
      - description: The client name and version
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatsTxtTotals'
          description: AI Horde generated text statistics
      summary: "Details how many texts have been generated in the past minux,hour,day,month\
        \ and total"
      tags:
      - v2
  /v2/status/heartbeat:
    get:
      operationId: get_heartbeat
      parameters:
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      responses:
        "200":
          content: {}
          description: Success
      summary: "If this loads, this node is available"
      tags:
      - v2
  /v2/status/models:
    get:
      operationId: get_models
      parameters:
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: Filter the models by type (image or text).
        in: query
        name: type
        schema:
          default: image
          type: string
      - description: Filter only models that have at least this amount of threads
          serving.
        in: query
        name: min_count
        schema:
          type: integer
      - description: Filter the models that have at most this amount of threads serving.
        in: query
        name: max_count
        schema:
          type: integer
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActiveModel'
                type: array
          description: List All Active Models
      summary: Returns a list of models active currently in this horde
      tags:
      - v2
  /v2/status/models/{model_name}:
    get:
      operationId: get_model_single
      parameters:
      - in: path
        name: model_name
        required: true
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveModel'
          description: Lists specific model stats
      summary: Returns all the statistics of a specific model in this horde
      tags:
      - v2
  /v2/status/modes:
    get:
      description: "Use this endpoint to quicky determine if this horde is in maintenance,\
        \ invite_only or raid mode."
      operationId: get_horde_modes
      parameters:
      - description: The Admin or Owner API key.
        in: header
        name: apikey
        schema:
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HordeModes'
          description: AI Horde Maintenance
      summary: Horde Maintenance Mode Status
      tags:
      - v2
    put:
      description: "Endpoint for admins to (un)set the horde into maintenance, invite_only\
        \ or raid modes."
      operationId: put_horde_modes
      parameters:
      - description: The Admin API key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/put_horde_modes_request'
        required: true
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HordeModes'
          description: Maintenance Mode Set
      summary: Change Horde Modes
      tags:
      - v2
      x-codegen-request-body-name: payload
  /v2/status/news:
    get:
      operationId: get_horde_news
      parameters:
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Newspiece'
                type: array
          description: AI Horde News
      summary: Read the latest happenings on the horde
      tags:
      - v2
  /v2/status/performance:
    get:
      operationId: get_horde_load
      parameters:
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HordePerformance'
          description: AI Horde Performance
      summary: Details about the current performance of this Horde
      tags:
      - v2
  /v2/teams:
    get:
      operationId: get_teams
      parameters:
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TeamDetails'
                type: array
          description: Teams List
      summary: A List with the details of all teams
      tags:
      - v2
    post:
      description: Only trusted users can create new teams.
      operationId: post_teams
      parameters:
      - description: A User API key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeamInput'
        required: true
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Validation Error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifyTeam'
          description: Create Team
      summary: Create a new team
      tags:
      - v2
      x-codegen-request-body-name: payload
  /v2/teams/{team_id}:
    delete:
      description: |-
        Only the team's creator or a horde moderator can use this endpoint.
        This action is unrecoverable!
      operationId: delete_team_single
      parameters:
      - in: path
        name: team_id
        required: true
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: The Moderator or Owner API key.
        in: header
        name: apikey
        schema:
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Team Not Found
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedTeam'
          description: Delete Team
      summary: Delete the team entry
      tags:
      - v2
    get:
      operationId: get_team_single
      parameters:
      - in: path
        name: team_id
        required: true
        schema:
          type: string
      - description: The Moderator or Owner API key.
        in: header
        name: apikey
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Team Not Found
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDetails'
          description: Team Details
      summary: Details of a worker Team
      tags:
      - v2
    patch:
      operationId: patch_team_single
      parameters:
      - in: path
        name: team_id
        required: true
        schema:
          type: string
      - description: The Moderator or Creator API key.
        in: header
        name: apikey
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyTeamInput'
        required: true
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Team Not Found
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Validation Error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifyTeam'
          description: Modify Team
      summary: Update a Team's information
      tags:
      - v2
      x-codegen-request-body-name: payload
  /v2/users:
    get:
      operationId: get_users
      parameters:
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: Which page of results to return. Each page has 25 users.
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: How to sort the returned list.
        in: query
        name: sort
        schema:
          default: kudos
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: Users List
      summary: A List with the details and statistic of all registered users
      tags:
      - v2
  /v2/users/{user_id}:
    get:
      operationId: get_user_single
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          type: string
      - description: "The Admin, Mod or Owner API key."
        in: header
        name: apikey
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: User Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: User Details
      summary: Details and statistics about a specific user
      tags:
      - v2
    put:
      operationId: put_user_single
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          type: string
      - description: The Admin API .
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyUserInput'
        required: true
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Worker Not Found
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Validation Error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifyUser'
          description: Modify User
      summary: Endpoint for horde admins to perform operations on users
      tags:
      - v2
      x-codegen-request-body-name: payload
  /v2/workers:
    get:
      operationId: get_workers
      parameters:
      - description: A Moderator API key.
        in: header
        name: apikey
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: "Filter the workers by type (image, text or interrogation)."
        in: query
        name: type
        schema:
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkerDetails'
                type: array
          description: Workers List
      summary: A List with the details of all registered and active workers
      tags:
      - v2
  /v2/workers/{worker_id}:
    delete:
      description: |-
        This will delete the worker and their statistics. Will not affect the kudos generated by that worker for their owner.
        Only the worker's owner and an admin can use this endpoint.
        This action is unrecoverable!
      operationId: delete_worker_single
      parameters:
      - in: path
        name: worker_id
        required: true
        schema:
          type: string
      - description: The Moderator or Owner API key.
        in: header
        name: apikey
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Worker Not Found
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedWorker'
          description: Delete Worker
      summary: Delete the worker entry
      tags:
      - v2
    get:
      description: |-
        Can retrieve the details of a worker even if inactive
        (A worker is considered inactive if it has not checked in for 5 minutes)
      operationId: get_worker_single
      parameters:
      - in: path
        name: worker_id
        required: true
        schema:
          type: string
      - description: The Moderator or Owner API key.
        in: header
        name: apikey
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Worker Not Found
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkerDetails'
          description: Worker Details
      summary: Details of a registered worker
      tags:
      - v2
    put:
      operationId: put_worker_single
      parameters:
      - in: path
        name: worker_id
        required: true
        schema:
          type: string
      - description: The Moderator or Owner API key.
        in: header
        name: apikey
        required: true
        schema:
          type: string
      - description: The client name and version.
        in: header
        name: Client-Agent
        schema:
          default: unknown:0:unknown
          type: string
      - description: An optional fields mask
        in: header
        name: X-Fields
        schema:
          format: mask
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyWorkerInput'
        required: true
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Worker Not Found
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Access Denied
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Invalid API Key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: Validation Error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifyWorker'
          description: Modify Worker
      tags:
      - v2
      x-codegen-request-body-name: payload
components:
  responses:
    ParseError:
      content: {}
      description: When a mask can't be parsed
    MaskError:
      content: {}
      description: When any error occurs on mask
  schemas:
    GenerationInputStable:
      example:
        r2: true
        trusted_workers: false
        models:
        - models
        - models
        source_mask: source_mask
        shared: false
        webhook: https://haidra.net/00000000-0000-0000-0000-000000000000
        nsfw: false
        worker_blacklist: false
        params:
          seed: The little seed that could
          tiling: false
          loras:
          - is_version: false
            inject_trigger: inject_trigger
            name: Magnagothica
            model: 0.9621339166831824
            clip: 0.6373766566333288
          - is_version: false
            inject_trigger: inject_trigger
            name: Magnagothica
            model: 0.9621339166831824
            clip: 0.6373766566333288
          karras: false
          facefixer_strength: 0.75
          return_control_map: false
          steps: 353
          "n": 18
          special:
            param:
              key: "{}"
          image_is_control: false
          sampler_name: k_lms
          denoising_strength: 0.75
          width: 504
          seed_variation: 1
          hires_fix: false
          clip_skip: 1
          post_processing:
          - GFPGAN
          - GFPGAN
          cfg_scale: 8.008281904610115
          height: 1877
          control_type: canny
          tis:
          - strength: -2.6978641130652345
            name: "7808"
            inject_ti: prompt
          - strength: -2.6978641130652345
            name: "7808"
            inject_ti: prompt
        censor_nsfw: false
        replacement_filter: true
        source_processing: img2img
        source_image: source_image
        proxied_account: proxied_account
        dry_run: false
        prompt: prompt
        workers:
        - workers
        - workers
        disable_batching: false
        slow_workers: true
      properties:
        prompt:
          description: The prompt which will be sent to Stable Diffusion to generate
            an image.
          minLength: 1
          type: string
        params:
          $ref: '#/components/schemas/ModelGenerationInputStable'
        nsfw:
          default: false
          description: Set to true if this request is NSFW. This will skip workers
            which censor images.
          type: boolean
        trusted_workers:
          default: false
          description: "When true, only trusted workers will serve this request. When\
            \ False, Evaluating workers will also be used which can increase speed\
            \ but adds more risk!"
          type: boolean
        slow_workers:
          default: true
          description: "When True, allows slower workers to pick up this request.\
            \ Disabling this incurs an extra kudos cost."
          type: boolean
        censor_nsfw:
          default: false
          description: "If the request is SFW, and the worker accidentally generates\
            \ NSFW, it will send back a censored image."
          type: boolean
        workers:
          items:
            description: Specify up to 5 workers which are allowed to service this
              request.
            type: string
          type: array
        worker_blacklist:
          default: false
          description: "If true, the worker list will be treated as a blacklist instead\
            \ of a whitelist."
          type: boolean
        models:
          items:
            description: Specify which models are allowed to be used for this request.
            type: string
          type: array
        source_image:
          description: The Base64-encoded webp to use for img2img.
          type: string
        source_processing:
          default: img2img
          description: "If source_image is provided, specifies how to process it."
          enum:
          - img2img
          - inpainting
          - outpainting
          example: img2img
          type: string
        source_mask:
          description: "If source_processing is set to 'inpainting' or 'outpainting',\
            \ this parameter can be optionally provided as the  Base64-encoded webp\
            \ mask of the areas to inpaint. If this arg is not passed, the inpainting/outpainting\
            \ mask has to be embedded as alpha channel."
          type: string
        r2:
          default: true
          description: "If True, the image will be sent via cloudflare r2 download\
            \ link."
          type: boolean
        shared:
          default: false
          description: "If True, The image will be shared with LAION for improving\
            \ their dataset. This will also reduce your kudos consumption by 2. For\
            \ anonymous users, this is always True."
          type: boolean
        replacement_filter:
          default: true
          description: "If enabled, suspicious prompts are sanitized through a string\
            \ replacement filter instead."
          type: boolean
        dry_run:
          default: false
          description: "When true, the endpoint will simply return the cost of the\
            \ request in kudos and exit."
          type: boolean
        proxied_account:
          description: "If using a service account as a proxy, provide this value\
            \ to identify the actual account from which this request is coming from."
          type: string
        disable_batching:
          default: false
          description: "When true, This request will not use batching. This will allow\
            \ you to retrieve accurate seeds. Feature is restricted to Trusted users\
            \ and Patreons."
          type: boolean
        webhook:
          description: Provide a URL where the AI Horde will send a POST call after
            each delivered generation. The request will include the details of the
            job as well as the request ID.
          example: https://haidra.net/00000000-0000-0000-0000-000000000000
          maxLength: 1024
          minLength: 10
          type: string
      required:
      - prompt
      type: object
    ModelGenerationInputStable:
      allOf:
      - $ref: '#/components/schemas/ModelPayloadRootStable'
      - properties:
          steps:
            maximum: 500
            minimum: 1
            type: integer
          "n":
            description: The amount of images to generate.
            maximum: 20
            minimum: 1
            type: integer
        type: object
      example:
        seed: The little seed that could
        tiling: false
        loras:
        - is_version: false
          inject_trigger: inject_trigger
          name: Magnagothica
          model: 0.9621339166831824
          clip: 0.6373766566333288
        - is_version: false
          inject_trigger: inject_trigger
          name: Magnagothica
          model: 0.9621339166831824
          clip: 0.6373766566333288
        karras: false
        facefixer_strength: 0.75
        return_control_map: false
        steps: 353
        "n": 18
        special:
          param:
            key: "{}"
        image_is_control: false
        sampler_name: k_lms
        denoising_strength: 0.75
        width: 504
        seed_variation: 1
        hires_fix: false
        clip_skip: 1
        post_processing:
        - GFPGAN
        - GFPGAN
        cfg_scale: 8.008281904610115
        height: 1877
        control_type: canny
        tis:
        - strength: -2.6978641130652345
          name: "7808"
          inject_ti: prompt
        - strength: -2.6978641130652345
          name: "7808"
          inject_ti: prompt
    ModelPayloadRootStable:
      properties:
        sampler_name:
          default: k_euler_a
          enum:
          - k_lms
          - k_dpmpp_sde
          - k_euler
          - k_dpm_2_a
          - k_euler_a
          - k_dpmpp_2m
          - k_dpm_fast
          - lcm
          - k_heun
          - dpmsolver
          - k_dpm_2
          - k_dpm_adaptive
          - DDIM
          - k_dpmpp_2s_a
          example: k_lms
          type: string
        cfg_scale:
          maximum: 100
          minimum: 0
          type: number
        denoising_strength:
          example: 0.75
          maximum: 1
          minimum: 0.01
          type: number
        seed:
          description: The seed to use to generate this request. You can pass text
            as well as numbers.
          example: The little seed that could
          type: string
        height:
          description: The height of the image to generate.
          maximum: 3072
          minimum: 64
          multipleOf: 64
          type: integer
        width:
          description: The width of the image to generate.
          maximum: 3072
          minimum: 64
          multipleOf: 64
          type: integer
        seed_variation:
          description: "If passed with multiple n, the provided seed will be incremented\
            \ every time by this value."
          example: 1
          maximum: 1000
          minimum: 1
          type: integer
        post_processing:
          items:
            description: "The list of post-processors to apply to the image, in the\
              \ order to be applied."
            enum:
            - GFPGAN
            - RealESRGAN_x4plus
            - RealESRGAN_x2plus
            - RealESRGAN_x4plus_anime_6B
            - NMKD_Siax
            - 4x_AnimeSharp
            - CodeFormers
            - strip_background
            example: GFPGAN
            type: string
          type: array
          uniqueItems: true
        karras:
          default: false
          description: Set to True to enable karras noise scheduling tweaks.
          type: boolean
        tiling:
          default: false
          description: Set to True to create images that stitch together seamlessly.
          type: boolean
        hires_fix:
          default: false
          description: Set to True to process the image at base resolution before
            upscaling and re-processing.
          type: boolean
        clip_skip:
          description: The number of CLIP language processor layers to skip.
          example: 1
          maximum: 12
          minimum: 1
          type: integer
        control_type:
          enum:
          - canny
          - hed
          - depth
          - normal
          - openpose
          - seg
          - scribble
          - fakescribbles
          - hough
          example: canny
          type: string
        image_is_control:
          default: false
          description: Set to True if the image submitted is a pre-generated control
            map for ControlNet use.
          type: boolean
        return_control_map:
          default: false
          description: Set to True if you want the ControlNet map returned instead
            of a generated image.
          type: boolean
        facefixer_strength:
          example: 0.75
          maximum: 1
          minimum: 0
          type: number
        loras:
          items:
            $ref: '#/components/schemas/ModelPayloadLorasStable'
          type: array
        tis:
          items:
            $ref: '#/components/schemas/ModelPayloadTextualInversionsStable'
          type: array
        special:
          $ref: '#/components/schemas/ModelSpecialPayloadStable'
      type: object
    ModelPayloadLorasStable:
      example:
        is_version: false
        inject_trigger: inject_trigger
        name: Magnagothica
        model: 0.9621339166831824
        clip: 0.6373766566333288
      properties:
        name:
          description: "The exact name or CivitAI Model Page ID of the LoRa. If is_version\
            \ is true, this should be the CivitAI version ID."
          example: Magnagothica
          maxLength: 255
          minLength: 1
          type: string
        model:
          description: The strength of the LoRa to apply to the SD model.
          maximum: 5
          minimum: -5
          type: number
        clip:
          description: The strength of the LoRa to apply to the clip model.
          maximum: 5
          minimum: -5
          type: number
        inject_trigger:
          description: "If set, will try to discover a trigger for this LoRa which\
            \ matches or is similar to this string and inject it into the prompt.\
            \ If 'any' is specified it will be pick the first trigger."
          maxLength: 30
          minLength: 1
          type: string
        is_version:
          default: false
          description: "If true, will consider the LoRa ID as a CivitAI version ID\
            \ and search accordingly. Ensure the name is an integer."
          type: boolean
      required:
      - name
      type: object
    ModelPayloadTextualInversionsStable:
      example:
        strength: -2.6978641130652345
        name: "7808"
        inject_ti: prompt
      properties:
        name:
          description: The exact name or CivitAI ID of the Textual Inversion.
          example: "7808"
          maxLength: 255
          minLength: 1
          type: string
        inject_ti:
          description: "If set, Will automatically add this TI filename to the prompt\
            \ or negative prompt accordingly using the provided strength. If this\
            \ is set to None, then the user will have to manually add the embed to\
            \ the prompt themselves."
          enum:
          - prompt
          - negprompt
          example: prompt
          type: string
        strength:
          description: The strength with which to apply the TI to the prompt. Only
            used when inject_ti is not None
          maximum: 5
          minimum: -5
          type: number
      required:
      - name
      type: object
    ModelSpecialPayloadStable:
      example:
        param:
          key: "{}"
      properties:
        param:
          additionalProperties:
            properties: {}
            type: object
          type: object
      type: object
    RequestError:
      example:
        rc: ExampleHordeError
        message: message
      properties:
        message:
          description: The error message for this status code.
          type: string
        rc:
          description: "The return code for this error. See: https://github.com/Haidra-Org/AI-Horde/blob/main/README_return_codes.md"
          enum:
          - MissingPrompt
          - CorruptPrompt
          - KudosValidationError
          - NoValidActions
          - InvalidSize
          - InvalidPromptSize
          - TooManySteps
          - Profanity
          - ProfaneWorkerName
          - ProfaneBridgeAgent
          - ProfaneWorkerInfo
          - ProfaneUserName
          - ProfaneUserContact
          - ProfaneAdminComment
          - ProfaneTeamName
          - ProfaneTeamInfo
          - TooLong
          - TooLongWorkerName
          - TooLongUserName
          - NameAlreadyExists
          - WorkerNameAlreadyExists
          - TeamNameAlreadyExists
          - PolymorphicNameConflict
          - ImageValidationFailed
          - SourceImageResolutionExceeded
          - SourceImageSizeExceeded
          - SourceImageUrlInvalid
          - SourceImageUnreadable
          - InpaintingMissingMask
          - SourceMaskUnnecessary
          - UnsupportedSampler
          - UnsupportedModel
          - ControlNetUnsupported
          - ControlNetSourceMissing
          - ControlNetInvalidPayload
          - SourceImageRequiredForModel
          - UnexpectedModelName
          - TooManyUpscalers
          - ProcGenNotFound
          - InvalidAestheticAttempt
          - AestheticsNotCompleted
          - AestheticsNotPublic
          - AestheticsDuplicate
          - AestheticsMissing
          - AestheticsSolo
          - AestheticsConfused
          - AestheticsAlreadyExist
          - AestheticsServerRejected
          - AestheticsServerError
          - AestheticsServerDown
          - AestheticsServerTimeout
          - InvalidAPIKey
          - WrongCredentials
          - NotAdmin
          - NotModerator
          - NotOwner
          - NotPrivileged
          - AnonForbidden
          - AnonForbiddenWorker
          - AnonForbiddenUserMod
          - NotTrusted
          - UntrustedTeamCreation
          - UntrustedUnsafeIP
          - WorkerMaintenance
          - WorkerFlaggedMaintenance
          - TooManySameIPs
          - WorkerInviteOnly
          - UnsafeIP
          - TimeoutIP
          - TooManyNewIPs
          - KudosUpfront
          - SharedKeyEmpty
          - SharedKeyExpired
          - SharedKeyInsufficientKudos
          - InvalidJobID
          - RequestNotFound
          - WorkerNotFound
          - TeamNotFound
          - FilterNotFound
          - UserNotFound
          - DuplicateGen
          - AbortedGen
          - RequestExpired
          - TooManyPrompts
          - NoValidWorkers
          - MaintenanceMode
          - TargetAccountFlagged
          - SourceAccountFlagged
          - FaultWhenKudosReceiving
          - FaultWhenKudosSending
          - TooFastKudosTransfers
          - KudosTransferToAnon
          - KudosTransferToSelf
          - KudosTransferNotEnough
          - NegativeKudosTransfer
          - KudosTransferFromAnon
          - InvalidAwardUsername
          - KudosAwardToAnon
          - NotAllowedAwards
          - NoWorkerModSelected
          - NoUserModSelected
          - NoHordeModSelected
          - NoTeamModSelected
          - NoFilterModSelected
          - NoSharedKeyModSelected
          - BadRequest
          - Forbidden
          - Locked
          - ControlNetMismatch
          - HiResFixMismatch
          - TooManyLoras
          - BadLoraVersion
          - TooManyTIs
          - BetaAnonForbidden
          - BetaComparisonFault
          - BadCFGDecimals
          - BadCFGNumber
          - BadClientAgent
          - SpecialMissingPayload
          - SpecialForbidden
          - SpecialMissingUsername
          - SpecialModelNeedsSpecialUser
          - SpecialFieldNeedsSpecialUser
          - Img2ImgMismatch
          - TilingMismatch
          - EducationCannotSendKudos
          - InvalidPriorityUsername
          - OnlyServiceAccountProxy
          - RequiresTrust
          example: ExampleHordeError
          type: string
      required:
      - rc
      type: object
    RequestValidationError:
      allOf:
      - $ref: '#/components/schemas/RequestError'
      - properties:
          errors:
            additionalProperties:
              description: The details of the validation error
              type: string
            type: object
        type: object
      example:
        rc: ExampleHordeError
        message: message
        errors:
          key: errors
    RequestAsync:
      example:
        kudos: 0.8008281904610115
        warnings:
        - code: NoAvailableWorker
          message: message
        - code: NoAvailableWorker
          message: message
        id: id
        message: message
      properties:
        id:
          description: The UUID of the request. Use this to retrieve the request status
            in the future.
          type: string
        kudos:
          description: The expected kudos consumption for this request.
          type: number
        message:
          description: Any extra information from the horde about this request.
          type: string
        warnings:
          items:
            $ref: '#/components/schemas/RequestSingleWarning'
          type: array
      type: object
    RequestSingleWarning:
      example:
        code: NoAvailableWorker
        message: message
      properties:
        code:
          description: A unique identifier for this warning.
          enum:
          - NoAvailableWorker
          - ClipSkipMismatch
          - StepsTooFew
          - StepsTooMany
          - CfgScaleMismatch
          - CfgScaleTooSmall
          - CfgScaleTooLarge
          - SamplerMismatch
          - SchedulerMismatch
          example: NoAvailableWorker
          type: string
        message:
          description: "Something that you should be aware about this request, in\
            \ plain text."
          type: string
      type: object
    RequestStatusStable:
      allOf:
      - $ref: '#/components/schemas/RequestStatusCheck'
      - properties:
          generations:
            items:
              $ref: '#/components/schemas/GenerationStable'
            type: array
          shared:
            description: "If True, These images have been shared with LAION."
            type: boolean
        type: object
      example:
        shared: true
        queue_position: 2
        waiting: 5
        faulted: false
        wait_time: 5
        kudos: 7.061401241503109
        restarted: 1
        generations:
        - img: img
          seed: seed
          worker_name: worker_name
          model: model
          state: ok
          id: id
          gen_metadata:
          - ref: ref
            type: lora
            value: download_failed
          - ref: ref
            type: lora
            value: download_failed
          censored: true
          worker_id: worker_id
        - img: img
          seed: seed
          worker_name: worker_name
          model: model
          state: ok
          id: id
          gen_metadata:
          - ref: ref
            type: lora
            value: download_failed
          - ref: ref
            type: lora
            value: download_failed
          censored: true
          worker_id: worker_id
        processing: 6
        finished: 0
        is_possible: true
        done: true
    RequestStatusCheck:
      example:
        queue_position: 2
        waiting: 5
        faulted: false
        wait_time: 5
        kudos: 7.061401241503109
        restarted: 1
        processing: 6
        finished: 0
        is_possible: true
        done: true
      properties:
        finished:
          description: The amount of finished jobs in this request.
          type: integer
        processing:
          description: The amount of still processing jobs in this request.
          type: integer
        restarted:
          description: The amount of jobs that timed out and had to be restarted or
            were reported as failed by a worker.
          type: integer
        waiting:
          description: The amount of jobs waiting to be picked up by a worker.
          type: integer
        done:
          description: True when all jobs in this request are done. Else False.
          type: boolean
        faulted:
          default: false
          description: True when this request caused an internal server error and
            could not be completed.
          type: boolean
        wait_time:
          description: The expected amount to wait (in seconds) to generate all jobs
            in this request.
          type: integer
        queue_position:
          description: The position in the requests queue. This position is determined
            by relative Kudos amounts.
          type: integer
        kudos:
          description: The amount of total Kudos this request has consumed until now.
          type: number
        is_possible:
          default: true
          description: "If False, this request will not be able to be completed with\
            \ the pool of workers currently available."
          type: boolean
      type: object
    GenerationStable:
      allOf:
      - $ref: '#/components/schemas/Generation'
      - properties:
          img:
            description: The generated image as a Base64-encoded .webp file.
            title: Generated Image
            type: string
          seed:
            description: The seed which generated this image.
            title: Generation Seed
            type: string
          id:
            description: The ID for this image.
            title: Generation ID
            type: string
          censored:
            description: When true this image has been censored by the worker's safety
              filter.
            type: boolean
          gen_metadata:
            items:
              $ref: '#/components/schemas/GenerationMetadataStable'
            type: array
        type: object
      example:
        img: img
        seed: seed
        worker_name: worker_name
        model: model
        state: ok
        id: id
        gen_metadata:
        - ref: ref
          type: lora
          value: download_failed
        - ref: ref
          type: lora
          value: download_failed
        censored: true
        worker_id: worker_id
    Generation:
      properties:
        worker_id:
          description: The UUID of the worker which generated this image.
          title: Worker ID
          type: string
        worker_name:
          description: The name of the worker which generated this image.
          title: Worker Name
          type: string
        model:
          description: The model which generated this image.
          title: Generation Model
          type: string
        state:
          default: ok
          description: OBSOLETE (Use the gen_metadata field). The state of this generation.
          enum:
          - ok
          - censored
          example: ok
          title: Generation State
          type: string
      required:
      - state
      type: object
    GenerationMetadataStable:
      example:
        ref: ref
        type: lora
        value: download_failed
      properties:
        type:
          description: The relevance of the metadata field
          enum:
          - lora
          - ti
          - censorship
          - source_image
          - source_mask
          - batch_index
          example: lora
          type: string
        value:
          description: The value of the metadata field
          enum:
          - download_failed
          - parse_failed
          - baseline_mismatch
          - csam
          - nsfw
          - see_ref
          example: download_failed
          type: string
        ref:
          description: Optionally a reference for the metadata (e.g. a lora ID)
          maxLength: 255
          type: string
      required:
      - type
      - value
      type: object
    AestheticsPayload:
      example:
        ratings:
        - rating: 1
          id: 6038971e-f0b0-4fdd-a3bb-148f561f815e
          artifacts: 1
        - rating: 1
          id: 6038971e-f0b0-4fdd-a3bb-148f561f815e
          artifacts: 1
        best: 6038971e-f0b0-4fdd-a3bb-148f561f815e
      properties:
        best:
          description: "The UUID of the best image in this generation batch (only\
            \ used when 2+ images generated). If 2+ aesthetic ratings are also provided,\
            \ then they take precedence if they're not tied."
          example: 6038971e-f0b0-4fdd-a3bb-148f561f815e
          maxLength: 36
          minLength: 36
          type: string
        ratings:
          items:
            $ref: '#/components/schemas/AestheticRating'
          type: array
      type: object
    AestheticRating:
      example:
        rating: 1
        id: 6038971e-f0b0-4fdd-a3bb-148f561f815e
        artifacts: 1
      properties:
        id:
          description: The UUID of image being rated.
          example: 6038971e-f0b0-4fdd-a3bb-148f561f815e
          maxLength: 36
          minLength: 36
          type: string
        rating:
          description: The aesthetic rating 1-10 for this image.
          maximum: 10
          minimum: 1
          type: integer
        artifacts:
          description: |-
            The artifacts rating for this image.
            0 for flawless generation that perfectly fits to the prompt.
            1 for small, hardly recognizable flaws.
            2 small flaws that can easily be spotted, but don not harm the aesthetic experience.
            3 for flaws that look obviously wrong, but only mildly harm the aesthetic experience.
            4 for flaws that look obviously wrong & significantly harm the aesthetic experience.
            5 for flaws that make the image look like total garbage.
          example: 1
          maximum: 5
          minimum: 0
          type: integer
      required:
      - id
      - rating
      type: object
    GenerationSubmitted:
      example:
        reward: 10.0
      properties:
        reward:
          description: The amount of kudos gained for submitting this request.
          example: 10.0
          type: number
      type: object
    PopInputStable:
      allOf:
      - $ref: '#/components/schemas/PopInput'
      - properties:
          max_pixels:
            description: The maximum amount of pixels this worker can generate.
            type: integer
          blacklist:
            items:
              description: "Words which, when detected will refuste to pick up any\
                \ jobs."
              type: string
            type: array
          allow_img2img:
            default: true
            description: "If True, this worker will pick up img2img requests."
            type: boolean
          allow_painting:
            default: true
            description: "If True, this worker will pick up inpainting/outpainting\
              \ requests."
            type: boolean
          allow_unsafe_ipaddr:
            default: true
            description: "If True, this worker will pick up img2img requests coming\
              \ from clients with an unsafe IP."
            type: boolean
          allow_post_processing:
            default: true
            description: "If True, this worker will pick up requests requesting post-processing."
            type: boolean
          allow_controlnet:
            default: true
            description: "If True, this worker will pick up requests requesting ControlNet."
            type: boolean
          allow_lora:
            default: true
            description: "If True, this worker will pick up requests requesting LoRas."
            type: boolean
        type: object
      example:
        models:
        - models
        - models
        amount: 12
        allow_img2img: true
        nsfw: false
        max_pixels: 1
        threads: 4
        blacklist:
        - blacklist
        - blacklist
        bridge_agent: AI Horde Worker reGen:4.1.0:https://github.com/Haidra-Org/horde-worker-reGen
        allow_lora: true
        require_upfront_kudos: false
        allow_controlnet: true
        priority_usernames:
        - priority_usernames
        - priority_usernames
        name: name
        allow_unsafe_ipaddr: true
        allow_post_processing: true
        allow_painting: true
    PopInput:
      properties:
        name:
          description: The Name of the Worker.
          type: string
        priority_usernames:
          items:
            description: Users with priority to use this worker.
            type: string
          type: array
        nsfw:
          default: false
          description: Whether this worker can generate NSFW requests or not.
          type: boolean
        models:
          items:
            description: Which models this worker is serving.
            maxLength: 255
            minLength: 3
            type: string
          type: array
        bridge_agent:
          default: unknown:0:unknown
          description: "The worker name, version and website."
          example: AI Horde Worker reGen:4.1.0:https://github.com/Haidra-Org/horde-worker-reGen
          maxLength: 1000
          type: string
        threads:
          description: How many threads this worker is running. This is used to accurately
            the current power available in the horde.
          maximum: 50
          minimum: 1
          type: integer
        require_upfront_kudos:
          default: false
          description: "If True, this worker will only pick up requests where the\
            \ owner has the required kudos to consume already available."
          example: false
          type: boolean
        amount:
          description: How many jobvs to pop at the same time
          maximum: 20
          minimum: 1
          type: integer
      type: object
    GenerationPayloadStable:
      example:
        source_mask: source_mask
        source_processing: img2img
        payload:
          seed: The little seed that could
          tiling: false
          loras:
          - is_version: false
            inject_trigger: inject_trigger
            name: Magnagothica
            model: 0.9621339166831824
            clip: 0.6373766566333288
          - is_version: false
            inject_trigger: inject_trigger
            name: Magnagothica
            model: 0.9621339166831824
            clip: 0.6373766566333288
          use_nsfw_censor: true
          n_iter: 5
          karras: false
          facefixer_strength: 0.75
          return_control_map: false
          special:
            param:
              key: "{}"
          image_is_control: false
          sampler_name: k_lms
          denoising_strength: 0.75
          width: 504
          seed_variation: 1
          ddim_steps: 5
          hires_fix: false
          clip_skip: 1
          prompt: prompt
          post_processing:
          - GFPGAN
          - GFPGAN
          cfg_scale: 8.008281904610115
          height: 1877
          control_type: canny
          tis:
          - strength: -2.6978641130652345
            name: "7808"
            inject_ti: prompt
          - strength: -2.6978641130652345
            name: "7808"
            inject_ti: prompt
        source_image: source_image
        r2_upload: r2_upload
        ids:
        - 00000000-0000-0000-0000-000000000000
        - 00000000-0000-0000-0000-000000000000
        model: model
        id: id
        r2_uploads:
        - r2_uploads
        - r2_uploads
        skipped:
          lora: 7
          models: 0
          bridge_version: 0
          post-processing: 6
          kudos: 4
          nsfw: 0
          max_pixels: 7
          img2img: 1
          unsafe_ip: 1
          blacklist: 0
          worker_id: 0
          performance: 0
          untrusted: 0
          painting: 1
          controlnet: 1
      properties:
        payload:
          $ref: '#/components/schemas/ModelPayloadStable'
        id:
          description: The UUID for this image generation.
          type: string
        ids:
          items:
            description: The UUID for this image generation.
            example: 00000000-0000-0000-0000-000000000000
            type: string
          type: array
        skipped:
          $ref: '#/components/schemas/NoValidRequestFoundStable'
        model:
          description: Which of the available models to use for this request.
          type: string
        source_image:
          description: The Base64-encoded webp to use for img2img.
          type: string
        source_processing:
          default: img2img
          description: "If source_image is provided, specifies how to process it."
          enum:
          - img2img
          - inpainting
          - outpainting
          example: img2img
          type: string
        source_mask:
          description: "If img_processing is set to 'inpainting' or 'outpainting',\
            \ this parameter can be optionally provided as the mask of the areas to\
            \ inpaint. If this arg is not passed, the inpainting/outpainting mask\
            \ has to be embedded as alpha channel."
          type: string
        r2_upload:
          description: The r2 upload link to use to upload this image.
          type: string
        r2_uploads:
          items:
            description: The r2 upload link to use to upload this image.
            type: string
          type: array
      type: object
    ModelPayloadStable:
      allOf:
      - $ref: '#/components/schemas/ModelPayloadRootStable'
      - properties:
          prompt:
            description: The prompt which will be sent to Stable Diffusion to generate
              an image.
            type: string
          ddim_steps:
            type: integer
          n_iter:
            description: The amount of images to generate.
            type: integer
          use_nsfw_censor:
            description: When true will apply NSFW censoring model on the generation.
            type: boolean
        type: object
      example:
        seed: The little seed that could
        tiling: false
        loras:
        - is_version: false
          inject_trigger: inject_trigger
          name: Magnagothica
          model: 0.9621339166831824
          clip: 0.6373766566333288
        - is_version: false
          inject_trigger: inject_trigger
          name: Magnagothica
          model: 0.9621339166831824
          clip: 0.6373766566333288
        use_nsfw_censor: true
        n_iter: 5
        karras: false
        facefixer_strength: 0.75
        return_control_map: false
        special:
          param:
            key: "{}"
        image_is_control: false
        sampler_name: k_lms
        denoising_strength: 0.75
        width: 504
        seed_variation: 1
        ddim_steps: 5
        hires_fix: false
        clip_skip: 1
        prompt: prompt
        post_processing:
        - GFPGAN
        - GFPGAN
        cfg_scale: 8.008281904610115
        height: 1877
        control_type: canny
        tis:
        - strength: -2.6978641130652345
          name: "7808"
          inject_ti: prompt
        - strength: -2.6978641130652345
          name: "7808"
          inject_ti: prompt
    NoValidRequestFoundStable:
      allOf:
      - $ref: '#/components/schemas/NoValidRequestFound'
      - properties:
          max_pixels:
            description: How many waiting requests were skipped because they demanded
              a higher size than this worker provides.
            type: integer
          unsafe_ip:
            description: How many waiting requests were skipped because they came
              from an unsafe IP.
            type: integer
          img2img:
            description: How many waiting requests were skipped because they requested
              img2img.
            type: integer
          painting:
            description: How many waiting requests were skipped because they requested
              inpainting/outpainting.
            type: integer
          post-processing:
            description: How many waiting requests were skipped because they requested
              post-processing.
            type: integer
          lora:
            description: How many waiting requests were skipped because they requested
              loras.
            type: integer
          controlnet:
            description: How many waiting requests were skipped because they requested
              a controlnet.
            type: integer
        type: object
      example:
        lora: 7
        models: 0
        bridge_version: 0
        post-processing: 6
        kudos: 4
        nsfw: 0
        max_pixels: 7
        img2img: 1
        unsafe_ip: 1
        blacklist: 0
        worker_id: 0
        performance: 0
        untrusted: 0
        painting: 1
        controlnet: 1
    NoValidRequestFound:
      example:
        models: 0
        bridge_version: 0
        performance: 0
        untrusted: 0
        kudos: 2
        nsfw: 0
        blacklist: 0
        worker_id: 0
      properties:
        worker_id:
          description: How many waiting requests were skipped because they demanded
            a specific worker.
          minimum: 0
          type: integer
        performance:
          description: How many waiting requests were skipped because they required
            higher performance.
          minimum: 0
          type: integer
        nsfw:
          description: How many waiting requests were skipped because they demanded
            a nsfw generation which this worker does not provide.
          minimum: 0
          type: integer
        blacklist:
          description: How many waiting requests were skipped because they demanded
            a generation with a word that this worker does not accept.
          minimum: 0
          type: integer
        untrusted:
          description: How many waiting requests were skipped because they demanded
            a trusted worker which this worker is not.
          minimum: 0
          type: integer
        models:
          description: How many waiting requests were skipped because they demanded
            a different model than what this worker provides.
          example: 0
          minimum: 0
          type: integer
        bridge_version:
          description: How many waiting requests were skipped because they require
            a higher version of the bridge than this worker is running (upgrade if
            you see this in your skipped list).
          example: 0
          minimum: 0
          type: integer
        kudos:
          description: How many waiting requests were skipped because the user didn't
            have enough kudos when this worker requires upfront kudos.
          type: integer
      type: object
    SubmitInputStable:
      allOf:
      - $ref: '#/components/schemas/SubmitInput'
      - properties:
          seed:
            description: The seed for this generation.
            type: integer
          censored:
            default: false
            description: "OBSOLETE (start using meta): If True, this resulting image\
              \ has been censored."
            type: boolean
          gen_metadata:
            items:
              $ref: '#/components/schemas/GenerationMetadataStable'
            type: array
        required:
        - seed
        type: object
      example:
        generation: R2
        seed: 0
        id: 00000000-0000-0000-0000-000000000000
        state: ok
        gen_metadata:
        - ref: ref
          type: lora
          value: download_failed
        - ref: ref
          type: lora
          value: download_failed
        censored: false
    SubmitInput:
      properties:
        id:
          description: The UUID of this generation.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        generation:
          description: "R2 result was uploaded to R2, else the string of the result."
          example: R2
          type: string
        state:
          default: ok
          description: The state of this generation.
          enum:
          - ok
          - censored
          - faulted
          - csam
          example: ok
          title: Generation State
          type: string
      required:
      - id
      type: object
    GenerationInputKobold:
      example:
        softprompt: softprompt
        trusted_workers: false
        models:
        - models
        - models
        webhook: webhook
        proxied_account: proxied_account
        worker_blacklist: false
        dry_run: false
        params:
          rep_pen: 1.293162596100589
          tfs: 0.7061401241503109
          sampler_order:
          - 7
          - 7
          top_a: 0.9301444243932576
          frmtadsnsp: false
          smoothing_factor: 1.0246457001441578
          singleline: false
          stop_sequence:
          - stop_sequence
          - stop_sequence
          dynatemp_range: 0.7447079549270852
          use_default_badwordsids: true
          "n": 1
          top_p: 0.20350958999793195
          min_p: 0.12315135367772556
          max_context_length: 2636
          rep_pen_slope: 5.637376656633329
          rep_pen_range: 2442
          top_k: 36
          temperature: 1.1510679434673827
          typical: 0.4145608029883936
          dynatemp_exponent: 3.42342634917632
          frmtrmblln: false
          frmttriminc: false
          frmtrmspch: false
          max_length: 623
        prompt: prompt
        workers:
        - workers
        - workers
        disable_batching: false
        slow_workers: true
      properties:
        prompt:
          description: The prompt which will be sent to KoboldAI to generate text.
          type: string
        params:
          $ref: '#/components/schemas/ModelGenerationInputKobold'
        softprompt:
          description: Specify which softpompt needs to be used to service this request.
          minLength: 1
          type: string
        trusted_workers:
          default: false
          description: "When true, only trusted workers will serve this request. When\
            \ False, Evaluating workers will also be used which can increase speed\
            \ but adds more risk!"
          type: boolean
        slow_workers:
          default: true
          description: "When True, allows slower workers to pick up this request.\
            \ Disabling this incurs an extra kudos cost."
          type: boolean
        workers:
          items:
            description: Specify up to 5 workers which are allowed to service this
              request.
            type: string
          type: array
        worker_blacklist:
          default: false
          description: "If true, the worker list will be treated as a blacklist instead\
            \ of a whitelist."
          type: boolean
        models:
          items:
            description: Specify which models are allowed to be used for this request.
            type: string
          type: array
        dry_run:
          default: false
          description: "When true, the endpoint will simply return the cost of the\
            \ request in kudos and exit."
          type: boolean
        proxied_account:
          description: "If using a service account as a proxy, provide this value\
            \ to identify the actual account from which this request is coming from."
          type: string
        disable_batching:
          default: false
          description: "When true, This request will not use batching. This will allow\
            \ you to retrieve accurate seeds. Feature is restricted to Trusted users\
            \ and Patreons."
          type: boolean
        webhook:
          description: Provide a URL where the AI Horde will send a POST call after
            each delivered generation. The request will include the details of the
            job as well as the request ID.
          type: string
      type: object
    ModelGenerationInputKobold:
      allOf:
      - $ref: '#/components/schemas/ModelPayloadRootKobold'
      - type: object
      example:
        rep_pen: 1.293162596100589
        tfs: 0.7061401241503109
        sampler_order:
        - 7
        - 7
        top_a: 0.9301444243932576
        frmtadsnsp: false
        smoothing_factor: 1.0246457001441578
        singleline: false
        stop_sequence:
        - stop_sequence
        - stop_sequence
        dynatemp_range: 0.7447079549270852
        use_default_badwordsids: true
        "n": 1
        top_p: 0.20350958999793195
        min_p: 0.12315135367772556
        max_context_length: 2636
        rep_pen_slope: 5.637376656633329
        rep_pen_range: 2442
        top_k: 36
        temperature: 1.1510679434673827
        typical: 0.4145608029883936
        dynatemp_exponent: 3.42342634917632
        frmtrmblln: false
        frmttriminc: false
        frmtrmspch: false
        max_length: 623
    ModelPayloadRootKobold:
      properties:
        "n":
          example: 1
          maximum: 20
          minimum: 1
          type: integer
        frmtadsnsp:
          description: "Input formatting option. When enabled, adds a leading space\
            \ to your input if there is no trailing whitespace at the end of the previous\
            \ action."
          example: false
          type: boolean
        frmtrmblln:
          description: "Output formatting option. When enabled, replaces all occurrences\
            \ of two or more consecutive newlines in the output with one newline."
          example: false
          type: boolean
        frmtrmspch:
          description: "Output formatting option. When enabled, removes #/@%}{+=~|\\\
            ^<> from the output."
          example: false
          type: boolean
        frmttriminc:
          description: "Output formatting option. When enabled, removes some characters\
            \ from the end of the output such that the output doesn't end in the middle\
            \ of a sentence. If the output is less than one sentence long, does nothing."
          example: false
          type: boolean
        max_context_length:
          description: Maximum number of tokens to send to the model.
          maximum: 32000
          minimum: 80
          type: integer
        max_length:
          description: Number of tokens to generate.
          maximum: 1024
          minimum: 16
          type: integer
        rep_pen:
          description: Base repetition penalty value.
          maximum: 3
          minimum: 1
          type: number
        rep_pen_range:
          description: Repetition penalty range.
          maximum: 4096
          minimum: 0
          type: integer
        rep_pen_slope:
          description: Repetition penalty slope.
          maximum: 10
          minimum: 0
          type: number
        singleline:
          description: "Output formatting option. When enabled, removes everything\
            \ after the first line of the output, including the newline."
          example: false
          type: boolean
        temperature:
          description: Temperature value.
          maximum: 5
          minimum: 0
          type: number
        tfs:
          description: Tail free sampling value.
          maximum: 1
          minimum: 0
          type: number
        top_a:
          description: Top-a sampling value.
          maximum: 1
          minimum: 0
          type: number
        top_k:
          description: Top-k sampling value.
          maximum: 100
          minimum: 0
          type: integer
        top_p:
          description: Top-p sampling value.
          maximum: 1
          minimum: 0.001
          type: number
        typical:
          description: Typical sampling value.
          maximum: 1
          minimum: 0
          type: number
        sampler_order:
          items:
            description: Array of integers representing the sampler order to be used.
            type: integer
          type: array
        use_default_badwordsids:
          description: "When True, uses the default KoboldAI bad word IDs."
          example: true
          type: boolean
        stop_sequence:
          items:
            description: An array of string sequences whereby the model will stop
              generating further tokens. The returned text WILL contain the stop sequence.
            type: string
          type: array
        min_p:
          description: Min-p sampling value.
          maximum: 1
          minimum: 0
          type: number
        smoothing_factor:
          description: Quadratic sampling value.
          maximum: 10
          minimum: 0
          type: number
        dynatemp_range:
          description: Dynamic temperature range value.
          maximum: 5
          minimum: 0
          type: number
        dynatemp_exponent:
          description: Dynamic temperature exponent value.
          maximum: 5
          minimum: 0
          type: number
      type: object
    RequestStatusKobold:
      allOf:
      - $ref: '#/components/schemas/RequestStatusCheck'
      - properties:
          generations:
            items:
              $ref: '#/components/schemas/GenerationKobold'
            type: array
        type: object
      example:
        queue_position: 2
        waiting: 5
        faulted: false
        wait_time: 5
        kudos: 7.061401241503109
        restarted: 1
        generations:
        - seed: 9
          worker_name: worker_name
          model: model
          state: ok
          text: text
          gen_metadata:
          - ref: ref
            type: censorship
            value: csam
          - ref: ref
            type: censorship
            value: csam
          worker_id: worker_id
        - seed: 9
          worker_name: worker_name
          model: model
          state: ok
          text: text
          gen_metadata:
          - ref: ref
            type: censorship
            value: csam
          - ref: ref
            type: censorship
            value: csam
          worker_id: worker_id
        processing: 6
        finished: 0
        is_possible: true
        done: true
    GenerationKobold:
      allOf:
      - $ref: '#/components/schemas/Generation'
      - properties:
          text:
            description: The generated text.
            minLength: 0
            title: Generated Text
            type: string
          seed:
            description: The seed which generated this text.
            title: Generation Seed
            type: integer
          gen_metadata:
            items:
              $ref: '#/components/schemas/GenerationMetadataKobold'
            type: array
        type: object
      example:
        seed: 9
        worker_name: worker_name
        model: model
        state: ok
        text: text
        gen_metadata:
        - ref: ref
          type: censorship
          value: csam
        - ref: ref
          type: censorship
          value: csam
        worker_id: worker_id
    GenerationMetadataKobold:
      example:
        ref: ref
        type: censorship
        value: csam
      properties:
        type:
          description: The relevance of the metadata field
          enum:
          - censorship
          example: censorship
          type: string
        value:
          description: The value of the metadata field
          enum:
          - csam
          example: csam
          type: string
        ref:
          description: Optionally a reference for the metadata (e.g. a lora ID)
          maxLength: 255
          type: string
      required:
      - type
      - value
      type: object
    PopInputKobold:
      allOf:
      - $ref: '#/components/schemas/PopInput'
      - properties:
          max_length:
            description: The maximum amount of tokens this worker can generate.
            type: integer
          max_context_length:
            description: The max amount of context to submit to this AI for sampling.
            type: integer
          softprompts:
            items:
              description: The available softprompt files on this worker for the currently
                running model.
              type: string
            type: array
        type: object
      example:
        models:
        - models
        - models
        priority_usernames:
        - priority_usernames
        - priority_usernames
        amount: 12
        max_context_length: 5
        nsfw: false
        softprompts:
        - softprompts
        - softprompts
        name: name
        threads: 4
        bridge_agent: AI Horde Worker reGen:4.1.0:https://github.com/Haidra-Org/horde-worker-reGen
        require_upfront_kudos: false
        max_length: 1
    GenerationPayload:
      example:
        payload:
          seed: seed
          prompt: prompt
          "n": 1
        id: id
        skipped:
          models: 0
          bridge_version: 0
          performance: 0
          untrusted: 0
          kudos: 2
          nsfw: 0
          blacklist: 0
          worker_id: 0
      properties:
        payload:
          $ref: '#/components/schemas/ModelPayload'
        id:
          description: The UUID for this generation.
          type: string
        skipped:
          $ref: '#/components/schemas/NoValidRequestFound'
      type: object
    ModelPayload:
      example:
        seed: seed
        prompt: prompt
        "n": 1
      properties:
        prompt:
          description: The prompt which will be sent to the horde against which to
            run inference.
          type: string
        "n":
          description: The amount of images to generate.
          example: 1
          type: integer
        seed:
          description: The seed to use to generete this request.
          type: string
      type: object
    SubmitInputKobold:
      allOf:
      - $ref: '#/components/schemas/SubmitInput'
      - properties:
          gen_metadata:
            items:
              $ref: '#/components/schemas/GenerationMetadataKobold'
            type: array
        type: object
      example:
        generation: R2
        id: 00000000-0000-0000-0000-000000000000
        state: ok
        gen_metadata:
        - ref: ref
          type: censorship
          value: csam
        - ref: ref
          type: censorship
          value: csam
    UserDetails:
      example:
        education: false
        kudos: 6.027456183070403
        records:
          request:
            image: 9
            interrogation: 6
            text: 9
          contribution:
            tokens: 5
            megapixelsteps: 4.965218492984954
          usage:
            tokens: 5
            megapixelsteps: 4.965218492984954
          fulfillment:
            image: 9
            interrogation: 6
            text: 9
        pseudonymous: false
        moderator: false
        usage:
          requests: 6
          megapixelsteps: 1.4894159098541704
        account_age: 60
        admin_comment: User is sus
        worker_invited: 5
        sharedkey_ids:
        - 00000000-0000-0000-0000-000000000000
        - 00000000-0000-0000-0000-000000000000
        contributions:
          fulfillments: 1
          megapixelsteps: 7.457744773683766
        flagged: false
        contact: email@example.com
        id: 0
        monthly_kudos:
          last_received: 2000-01-23T04:56:07.000+00:00
          amount: 1
        worker_count: 1
        kudos_details:
          donated: 9.301444243932576
          gifted: 7.061401241503109
          awarded: 7.386281948385884
          recurring: 4.145608029883936
          admin: 3.616076749251911
          received: 2.027123023002322
          accumulated: 2.3021358869347655
        worker_ids:
        - 00000000-0000-0000-0000-000000000000
        - 00000000-0000-0000-0000-000000000000
        suspicious: 0
        concurrency: 5
        special: false
        trusted: false
        vpn: false
        service: false
        username: username
        evaluating_kudos: 1.4658129805029452
      properties:
        username:
          description: The user's unique Username. It is a combination of their chosen
            alias plus their ID.
          type: string
        id:
          description: The user unique ID. It is always an integer.
          type: integer
        kudos:
          description: The amount of Kudos this user has. The amount of Kudos determines
            the priority when requesting image generations.
          type: number
        evaluating_kudos:
          description: "(Privileged) The amount of Evaluating Kudos this untrusted\
            \ user has from generations and uptime. When this number reaches a prespecified\
            \ threshold, they automatically become trusted."
          type: number
        concurrency:
          description: How many concurrent generations this user may request.
          type: integer
        worker_invited:
          description: "Whether this user has been invited to join a worker to the\
            \ AI Horde and how many of them. When 0, this user cannot add (new) workers\
            \ to the horde."
          type: integer
        moderator:
          description: This user is a AI Horde moderator.
          example: false
          type: boolean
        kudos_details:
          $ref: '#/components/schemas/UserKudosDetails'
        worker_count:
          description: How many workers this user has created (active or inactive).
          type: integer
        worker_ids:
          items:
            description: Privileged or public when the user has explicitly allows
              it to be public.
            example: 00000000-0000-0000-0000-000000000000
            type: string
          type: array
        sharedkey_ids:
          items:
            description: (Privileged) The list of shared key IDs created by this user.
            example: 00000000-0000-0000-0000-000000000000
            type: string
          type: array
        monthly_kudos:
          $ref: '#/components/schemas/MonthlyKudos'
        trusted:
          description: This user is a trusted member of the AI Horde.
          example: false
          type: boolean
        flagged:
          description: (Privileged) This user has been flagged for suspicious activity.
          example: false
          type: boolean
        vpn:
          description: (Privileged) This user has been given the VPN role.
          example: false
          type: boolean
        service:
          description: This is a service account used by a horde proxy.
          example: false
          type: boolean
        education:
          description: This is an education account used schools and universities.
          example: false
          type: boolean
        special:
          description: (Privileged) This user has been given the Special role.
          example: false
          type: boolean
        suspicious:
          description: (Privileged) How much suspicion this user has accumulated.
          example: 0
          type: integer
        pseudonymous:
          description: "If true, this user has not registered using an oauth service."
          example: false
          type: boolean
        contact:
          description: (Privileged) Contact details for the horde admins to reach
            the user in case of emergency.
          example: email@example.com
          type: string
        admin_comment:
          description: (Privileged) Information about this users by the admins
          example: User is sus
          type: string
        account_age:
          description: How many seconds since this account was created.
          example: 60
          type: integer
        usage:
          $ref: '#/components/schemas/UsageDetails'
        contributions:
          $ref: '#/components/schemas/ContributionsDetails'
        records:
          $ref: '#/components/schemas/UserRecords'
      type: object
    UserKudosDetails:
      example:
        donated: 9.301444243932576
        gifted: 7.061401241503109
        awarded: 7.386281948385884
        recurring: 4.145608029883936
        admin: 3.616076749251911
        received: 2.027123023002322
        accumulated: 2.3021358869347655
      properties:
        accumulated:
          description: The ammount of Kudos accumulated or used for generating images.
          type: number
        gifted:
          description: The amount of Kudos this user has given to other users.
          type: number
        donated:
          description: The amount of Kudos this user has donated to public goods accounts
            like education.
          type: number
        admin:
          description: The amount of Kudos this user has been given by the AI Horde
            admins.
          type: number
        received:
          description: The amount of Kudos this user has been given by other users.
          type: number
        recurring:
          description: The amount of Kudos this user has received from recurring rewards.
          type: number
        awarded:
          description: The amount of Kudos this user has been awarded from things
            like rating images.
          type: number
      type: object
    MonthlyKudos:
      example:
        last_received: 2000-01-23T04:56:07.000+00:00
        amount: 1
      properties:
        amount:
          description: How much recurring Kudos this user receives monthly.
          type: integer
        last_received:
          description: Last date this user received monthly Kudos.
          format: date-time
          type: string
      type: object
    UsageDetails:
      example:
        requests: 6
        megapixelsteps: 1.4894159098541704
      properties:
        megapixelsteps:
          description: How many megapixelsteps this user has requested.
          type: number
        requests:
          description: How many images this user has requested.
          type: integer
      type: object
    ContributionsDetails:
      example:
        fulfillments: 1
        megapixelsteps: 7.457744773683766
      properties:
        megapixelsteps:
          description: How many megapixelsteps this user has generated.
          type: number
        fulfillments:
          description: How many images this user has generated.
          type: integer
      type: object
    UserRecords:
      example:
        request:
          image: 9
          interrogation: 6
          text: 9
        contribution:
          tokens: 5
          megapixelsteps: 4.965218492984954
        usage:
          tokens: 5
          megapixelsteps: 4.965218492984954
        fulfillment:
          image: 9
          interrogation: 6
          text: 9
      properties:
        usage:
          $ref: '#/components/schemas/UserThingRecords'
        contribution:
          $ref: '#/components/schemas/UserThingRecords'
        fulfillment:
          $ref: '#/components/schemas/UserAmountRecords'
        request:
          $ref: '#/components/schemas/UserAmountRecords'
      type: object
    UserThingRecords:
      example:
        tokens: 5
        megapixelsteps: 4.965218492984954
      properties:
        megapixelsteps:
          description: How many megapixelsteps this user has generated or requested.
          type: number
        tokens:
          description: How many token this user has generated or requested.
          type: integer
      type: object
    UserAmountRecords:
      example:
        image: 9
        interrogation: 6
        text: 9
      properties:
        image:
          description: How many images this user has generated or requested.
          type: integer
        text:
          description: How many texts this user has generated or requested.
          type: integer
        interrogation:
          description: How many texts this user has generated or requested.
          type: integer
      type: object
    ModifyUserInput:
      example:
        education: false
        kudos: 0.8008281904610115
        usage_multiplier: 1.5511548506979158
        moderator: false
        admin_comment: User is sus
        worker_invited: 5
        public_workers: false
        reset_suspicion: true
        customizer: false
        concurrency: 301
        special: false
        flagged: false
        filtered: false
        trusted: false
        vpn: false
        service: false
        contact: email@example.com
        monthly_kudos: 5
        username: username
      properties:
        kudos:
          description: The amount of kudos to modify (can be negative).
          type: number
        concurrency:
          description: The amount of concurrent request this user can have.
          maximum: 500
          minimum: 0
          type: integer
        usage_multiplier:
          description: The amount by which to multiply the users kudos consumption.
          maximum: 10
          minimum: 0.1
          type: number
        worker_invited:
          description: Set to the amount of workers this user is allowed to join to
            the horde when in worker invite-only mode.
          type: integer
        moderator:
          description: Set to true to make this user a horde moderator.
          example: false
          type: boolean
        public_workers:
          description: Set to true to make this user display their worker IDs.
          example: false
          type: boolean
        monthly_kudos:
          description: "When specified, will start assigning the user monthly kudos,\
            \ starting now!"
          type: integer
        username:
          description: "When specified, will change the username. No profanity allowed!"
          maxLength: 100
          minLength: 3
          type: string
        trusted:
          description: "When set to true,the user and their servers will not be affected\
            \ by suspicion."
          example: false
          type: boolean
        flagged:
          description: "When set to true, the user cannot tranfer kudos and all their\
            \ workers are put into permanent maintenance."
          example: false
          type: boolean
        customizer:
          description: "When set to true, the user will be able to serve custom Stable\
            \ Diffusion models which do not exist in the Official AI Horde Model Reference."
          example: false
          type: boolean
        vpn:
          description: "When set to true, the user will be able to onboard workers\
            \ behind a VPN. This should be used as a temporary solution until the\
            \ user is trusted."
          example: false
          type: boolean
        service:
          description: "When set to true, the user is considered a service account\
            \ proxying the requests for other users."
          example: false
          type: boolean
        education:
          description: "When set to true, the user is considered an education account\
            \ and some options become more restrictive."
          example: false
          type: boolean
        special:
          description: "When set to true, The user can send special payloads."
          example: false
          type: boolean
        filtered:
          description: "When set to true, the replacement filter will always be applied\
            \ against this user"
          example: false
          type: boolean
        reset_suspicion:
          description: Set the user's suspicion back to 0.
          type: boolean
        contact:
          description: Contact details for the horde admins to reach the user in case
            of emergency. This is only visible to horde moderators.
          example: email@example.com
          maxLength: 500
          minLength: 5
          type: string
        admin_comment:
          description: Add further information about this user for the other admins.
          example: User is sus
          maxLength: 500
          minLength: 5
          type: string
      type: object
    ModifyUser:
      example:
        education: true
        new_kudos: 0.8008281904610115
        usage_multiplier: 1.0
        moderator: false
        admin_comment: User is sus
        worker_invited: 1
        public_workers: false
        new_suspicion: 6
        customizer: true
        concurrency: 30
        special: true
        flagged: true
        trusted: true
        vpn: true
        service: true
        contact: email@example.com
        monthly_kudos: 0
        username: username#1
      properties:
        new_kudos:
          description: The new total Kudos this user has after this request.
          type: number
        concurrency:
          description: The request concurrency this user has after this request.
          example: 30
          type: integer
        usage_multiplier:
          description: Multiplies the amount of kudos lost when generating images.
          example: 1.0
          type: number
        worker_invited:
          description: "Whether this user has been invited to join a worker to the\
            \ horde and how many of them. When 0, this user cannot add (new) workers\
            \ to the horde."
          example: 1
          type: integer
        moderator:
          description: The user's new moderator status.
          example: false
          type: boolean
        public_workers:
          description: The user's new public_workers status.
          example: false
          type: boolean
        username:
          description: The user's new username.
          example: username#1
          type: string
        monthly_kudos:
          description: The user's new monthly kudos total.
          example: 0
          type: integer
        trusted:
          description: The user's new trusted status.
          type: boolean
        flagged:
          description: The user's new flagged status.
          type: boolean
        customizer:
          description: The user's new customizer status.
          type: boolean
        vpn:
          description: The user's new vpn status.
          type: boolean
        service:
          description: The user's new service status.
          type: boolean
        education:
          description: The user's new education status.
          type: boolean
        special:
          description: The user's new special status.
          type: boolean
        new_suspicion:
          description: The user's new suspiciousness rating.
          type: integer
        contact:
          description: The new contact details.
          example: email@example.com
          type: string
        admin_comment:
          description: The new admin comment.
          example: User is sus
          maxLength: 500
          minLength: 5
          type: string
      type: object
    SharedKeyInput:
      example:
        kudos: 4004140
        max_text_tokens: 297
        name: Mutual Aid
        expiry: 30
        max_image_steps: 72
        max_image_pixels: 2528097
      properties:
        kudos:
          description: "The Kudos limit assigned to this key. If -1, then anyone with\
            \ this key can use an unlimited amount of kudos from this account."
          maximum: 50000000
          minimum: -1
          type: integer
        expiry:
          description: "The amount of days after which this key will expire. If -1,\
            \ this key will not expire."
          example: 30
          minimum: -1
          type: integer
        name:
          description: A descriptive name for this key.
          example: Mutual Aid
          maxLength: 255
          minLength: 3
          type: string
        max_image_pixels:
          description: The maximum amount of image pixels this key can generate per
            job. -1 means unlimited.
          maximum: 4194304
          minimum: -1
          type: integer
        max_image_steps:
          description: The maximum amount of image steps this key can use per job.
            -1 means unlimited.
          maximum: 500
          minimum: -1
          type: integer
        max_text_tokens:
          description: The maximum amount of text tokens this key can generate per
            job. -1 means unlimited.
          maximum: 500
          minimum: -1
          type: integer
      type: object
    SharedKeyDetails:
      example:
        kudos: 0
        max_text_tokens: 5
        name: name
        id: id
        expiry: 2000-01-23T04:56:07.000+00:00
        max_image_steps: 5
        utilized: 6
        username: username
        max_image_pixels: 1
      properties:
        id:
          description: The SharedKey ID.
          type: string
        username:
          description: The owning user's unique Username. It is a combination of their
            chosen alias plus their ID.
          type: string
        name:
          description: The Shared Key Name.
          type: string
        kudos:
          description: The Kudos limit assigned to this key.
          type: integer
        expiry:
          description: The date at which this API key will expire.
          format: date-time
          type: string
        utilized:
          description: How much kudos has been utilized via this shared key until
            now.
          type: integer
        max_image_pixels:
          description: The maximum amount of image pixels this key can generate per
            job. -1 means unlimited.
          type: integer
        max_image_steps:
          description: The maximum amount of image steps this key can use per job.
            -1 means unlimited.
          type: integer
        max_text_tokens:
          description: The maximum amount of text tokens this key can generate per
            job. -1 means unlimited.
          type: integer
      type: object
    SimpleResponse:
      example:
        message: OK
      properties:
        message:
          default: OK
          description: The result of this operation.
          type: string
      required:
      - message
      type: object
    WorkerDetails:
      allOf:
      - $ref: '#/components/schemas/WorkerDetailsLite'
      - properties:
          requests_fulfilled:
            description: How many images this worker has generated.
            type: integer
          kudos_rewards:
            description: How many Kudos this worker has been rewarded in total.
            type: number
          kudos_details:
            $ref: '#/components/schemas/WorkerKudosDetails'
          performance:
            description: The average performance of this worker in human readable
              form.
            type: string
          threads:
            description: How many threads this worker is running.
            type: integer
          uptime:
            description: The amount of seconds this worker has been online for this
              AI Horde.
            type: integer
          maintenance_mode:
            description: "When True, this worker will not pick up any new requests."
            example: false
            type: boolean
          paused:
            description: "(Privileged) When True, this worker not be given any new\
              \ requests."
            example: false
            type: boolean
          info:
            description: Extra information or comments about this worker provided
              by its owner.
            example: https://dbzer0.com
            type: string
          nsfw:
            default: false
            description: Whether this worker can generate NSFW requests or not.
            type: boolean
          owner:
            description: Privileged or public if the owner has allowed it. The alias
              of the owner of this worker.
            example: username#1
            type: string
          ipaddr:
            description: Privileged. The last known IP this worker has connected from.
            example: username#1
            type: string
          trusted:
            description: The worker is trusted to return valid generations.
            type: boolean
          flagged:
            description: The worker's owner has been flagged for suspicious activity.
              This worker will not be given any jobs to process.
            type: boolean
          suspicious:
            description: (Privileged) How much suspicion this worker has accumulated.
            example: 0
            type: integer
          uncompleted_jobs:
            description: How many jobs this worker has left uncompleted after it started
              them.
            example: 0
            type: integer
          models:
            items:
              description: Which models this worker if offering.
              type: string
            type: array
          forms:
            items:
              description: Which forms this worker if offering.
              type: string
            type: array
          team:
            $ref: '#/components/schemas/TeamDetailsLite'
          contact:
            description: (Privileged) Contact details for the horde admins to reach
              the owner of this worker in emergencies.
            example: email@example.com
            maxLength: 500
            minLength: 5
            type: string
          bridge_agent:
            default: unknown:0:unknown
            description: "The bridge agent name, version and website."
            example: AI Horde Worker reGen:4.1.0:https://github.com/Haidra-Org/horde-worker-reGen
            maxLength: 1000
            type: string
          max_pixels:
            description: The maximum pixels in resolution this worker can generate.
            example: 262144
            type: integer
          megapixelsteps_generated:
            description: How many megapixelsteps this worker has generated until now.
            type: number
          img2img:
            description: "If True, this worker supports and allows img2img requests."
            type: boolean
          painting:
            description: "If True, this worker supports and allows inpainting requests."
            type: boolean
          post-processing:
            description: "If True, this worker supports and allows post-processing\
              \ requests."
            type: boolean
          lora:
            description: "If True, this worker supports and allows lora requests."
            type: boolean
          max_length:
            description: The maximum tokens this worker can generate.
            example: 80
            type: integer
          max_context_length:
            description: The maximum tokens this worker can read.
            example: 80
            type: integer
          tokens_generated:
            description: How many tokens this worker has generated until now.
            type: number
        required:
        - bridge_agent
        type: object
      example:
        lora: true
        uncompleted_jobs: 0
        post-processing: true
        paused: false
        maintenance_mode: false
        kudos_rewards: 6.027456183070403
        bridge_agent: AI Horde Worker reGen:4.1.0:https://github.com/Haidra-Org/horde-worker-reGen
        type: image
        megapixelsteps_generated: 7.061401241503109
        flagged: true
        max_context_length: 80
        contact: email@example.com
        id: id
        ipaddr: username#1
        info: https://dbzer0.com
        max_length: 80
        owner: username#1
        models:
        - models
        - models
        nsfw: false
        max_pixels: 262144
        img2img: true
        tokens_generated: 9.301444243932576
        kudos_details:
          generated: 1.4658129805029452
          uptime: 5
        threads: 5
        suspicious: 0
        team:
          name: name
          id: id
        uptime: 2
        requests_fulfilled: 0
        performance: performance
        trusted: true
        painting: true
        name: name
        online: true
        forms:
        - forms
        - forms
    WorkerDetailsLite:
      example:
        name: name
        online: true
        id: id
        type: image
      properties:
        type:
          description: The Type of worker this is.
          enum:
          - image
          - text
          - interrogation
          example: image
          type: string
        name:
          description: The Name given to this worker.
          type: string
        id:
          description: The UUID of this worker.
          type: string
        online:
          description: True if the worker has checked-in the past 5 minutes.
          type: boolean
      type: object
    WorkerKudosDetails:
      example:
        generated: 1.4658129805029452
        uptime: 5
      properties:
        generated:
          description: How much Kudos this worker has received for generating images.
          type: number
        uptime:
          description: How much Kudos this worker has received for staying online
            longer.
          type: integer
      type: object
    TeamDetailsLite:
      example:
        name: name
        id: id
      properties:
        name:
          description: The Name given to this team.
          type: string
        id:
          description: The UUID of this team.
          type: string
      type: object
    ModifyWorkerInput:
      example:
        paused: true
        maintenance_msg: maintenance_msg
        name: name
        team: 0bed257b-e57c-4327-ac64-40cdfb1ac5e6
        maintenance: true
        info: info
      properties:
        maintenance:
          description: Set to true to put this worker into maintenance.
          type: boolean
        maintenance_msg:
          description: "if maintenance is True, you can optionally provide a message\
            \ to be used instead of the default maintenance message, so that the owner\
            \ is informed."
          type: string
        paused:
          description: (Mods only) Set to true to pause this worker.
          type: boolean
        info:
          description: You can optionally provide a server note which will be seen
            in the server details. No profanity allowed!
          maxLength: 1000
          type: string
        name:
          description: "When this is set, it will change the worker's name. No profanity\
            \ allowed!"
          maxLength: 100
          minLength: 5
          type: string
        team:
          description: "The team towards which this worker contributes kudos.  It\
            \ an empty string ('') is passed, it will leave the worker without a team.\
            \ No profanity allowed!"
          example: 0bed257b-e57c-4327-ac64-40cdfb1ac5e6
          maxLength: 36
          type: string
      type: object
    DeletedWorker:
      example:
        deleted_id: deleted_id
        deleted_name: deleted_name
      properties:
        deleted_id:
          description: The ID of the deleted worker.
          type: string
        deleted_name:
          description: The Name of the deleted worker.
          type: string
      type: object
    ModifyWorker:
      example:
        paused: true
        name: name
        team: Direct Action
        maintenance: true
        info: info
      properties:
        maintenance:
          description: "The new state of the 'maintenance' var for this worker. When\
            \ True, this worker will not pick up any new requests."
          type: boolean
        paused:
          description: "The new state of the 'paused' var for this worker. When True,\
            \ this worker will not be given any new requests."
          type: boolean
        info:
          description: The new state of the 'info' var for this worker.
          type: string
        name:
          description: The new name for this this worker.
          type: string
        team:
          description: The new team of this worker.
          example: Direct Action
          type: string
      type: object
    KudosTransferred:
      example:
        transferred: 100.0
      properties:
        transferred:
          description: The amount of Kudos tranferred.
          example: 100.0
          type: number
      type: object
    KudosAwarded:
      example:
        awarded: 100.0
      properties:
        awarded:
          description: The amount of Kudos awarded.
          example: 100.0
          type: number
      type: object
    HordeModes:
      example:
        raid_mode: true
        maintenance_mode: true
        invite_only_mode: true
      properties:
        maintenance_mode:
          description: "When True, this horde will not accept new requests for image\
            \ generation, but will finish processing the ones currently in the queue."
          type: boolean
        invite_only_mode:
          description: "When True, this horde will not only accept worker explicitly\
            \ invited to join."
          type: boolean
        raid_mode:
          description: "When True, this horde will not always provide full information\
            \ in order to throw off attackers."
          type: boolean
      type: object
    HordePerformance:
      example:
        past_minute_megapixelsteps: 9.301444243932576
        queued_forms: 3.616076749251911
        interrogator_thread_count: 4
        worker_count: 1
        queued_megapixelsteps: 7.061401241503109
        queued_requests: 0
        text_worker_count: 5
        past_minute_tokens: 1.2315135367772556
        queued_tokens: 7.386281948385884
        text_thread_count: 2
        interrogator_count: 2
        queued_text_requests: 6
        thread_count: 5
      properties:
        queued_requests:
          description: The amount of waiting and processing image requests currently
            in this horde.
          type: integer
        queued_text_requests:
          description: The amount of waiting and processing text requests currently
            in this horde.
          type: integer
        worker_count:
          description: How many workers are actively processing prompt generations
            in this horde in the past 5 minutes.
          type: integer
        text_worker_count:
          description: How many workers are actively processing prompt generations
            in this horde in the past 5 minutes.
          type: integer
        thread_count:
          description: "How many worker threads are actively processing prompt generations\
            \ in this {horde_noun} in the past 5 minutes."
          type: integer
        text_thread_count:
          description: "How many worker threads are actively processing prompt generations\
            \ in this {horde_noun} in the past 5 minutes."
          type: integer
        queued_megapixelsteps:
          description: The amount of megapixelsteps in waiting and processing requests
            currently in this horde.
          type: number
        past_minute_megapixelsteps:
          description: How many megapixelsteps this horde generated in the last minute.
          type: number
        queued_forms:
          description: The amount of image interrogations waiting and processing currently
            in this horde.
          type: number
        interrogator_count:
          description: "How many workers are actively processing image interrogations\
            \ in this {horde_noun} in the past 5 minutes."
          type: integer
        interrogator_thread_count:
          description: "How many worker threads are actively processing image interrogation\
            \ in this {horde_noun} in the past 5 minutes."
          type: integer
        queued_tokens:
          description: The amount of tokens in waiting and processing requests currently
            in this horde.
          type: number
        past_minute_tokens:
          description: How many tokens this horde generated in the last minute.
          type: number
      type: object
    ActiveModel:
      allOf:
      - $ref: '#/components/schemas/ActiveModelLite'
      - properties:
          performance:
            description: The average speed of generation for this model.
            type: number
          queued:
            description: The amount waiting to be generated by this model.
            type: number
          jobs:
            description: The job count waiting to be generated by this model.
            type: number
          eta:
            description: Estimated time in seconds for this model's queue to be cleared.
            type: integer
          type:
            description: The model type (text or image).
            enum:
            - image
            - text
            example: image
            type: string
        type: object
      example:
        performance: 6.027456183070403
        eta: 5
        queued: 1.4658129805029452
        jobs: 5.962133916683182
        name: name
        count: 0
        type: image
    ActiveModelLite:
      example:
        name: name
        count: 5
      properties:
        name:
          description: The Name of a model available by workers in this horde.
          type: string
        count:
          description: How many of workers in this horde are running this model.
          type: integer
      type: object
    Newspiece:
      example:
        date_published: date_published
        importance: Information
        newspiece: newspiece
      properties:
        date_published:
          description: The date this newspiece was published.
          type: string
        newspiece:
          description: The actual piece of news.
          type: string
        importance:
          description: How critical this piece of news is.
          example: Information
          type: string
      type: object
    CreateTeamInput:
      example:
        name: name
        info: Anarchy is emergent order.
      properties:
        name:
          description: The name of the team. No profanity allowed!
          maxLength: 100
          minLength: 3
          type: string
        info:
          description: Extra information or comments about this team.
          example: Anarchy is emergent order.
          maxLength: 1000
          minLength: 3
          type: string
      required:
      - name
      type: object
    ModifyTeam:
      example:
        name: name
        id: id
        info: info
      properties:
        id:
          description: The ID of the team.
          type: string
        name:
          description: The Name of the team.
          type: string
        info:
          description: The Info of the team.
          type: string
      type: object
    TeamDetails:
      allOf:
      - $ref: '#/components/schemas/TeamDetailsLite'
      - properties:
          info:
            description: Extra information or comments about this team provided by
              its owner.
            example: Anarchy is emergent order.
            type: string
          requests_fulfilled:
            description: How many images this team's workers have generated.
            type: integer
          kudos:
            description: How many Kudos the workers in this team have been rewarded
              while part of this team.
            type: number
          uptime:
            description: The total amount of time workers have stayed online while
              on this team.
            type: integer
          creator:
            description: The alias of the user which created this team.
            example: db0#1
            type: string
          worker_count:
            description: How many workers have been dedicated to this team.
            example: 10
            type: integer
          workers:
            items:
              $ref: '#/components/schemas/WorkerDetailsLite'
            type: array
          models:
            items:
              $ref: '#/components/schemas/ActiveModelLite'
            type: array
        type: object
      example:
        requests_fulfilled: 0
        models:
        - name: name
          count: 5
        - name: name
          count: 5
        creator: db0#1
        worker_count: 10
        kudos: 6.027456183070403
        name: name
        id: id
        workers:
        - name: name
          online: true
          id: id
          type: image
        - name: name
          online: true
          id: id
          type: image
        info: Anarchy is emergent order.
        uptime: 1
    ModifyTeamInput:
      example:
        name: name
        info: Anarchy is emergent order.
      properties:
        name:
          description: The name of the team. No profanity allowed!
          maxLength: 100
          minLength: 3
          type: string
        info:
          description: Extra information or comments about this team.
          example: Anarchy is emergent order.
          maxLength: 1000
          minLength: 3
          type: string
      type: object
    DeletedTeam:
      example:
        deleted_id: deleted_id
        deleted_name: deleted_name
      properties:
        deleted_id:
          description: The ID of the deleted team.
          type: string
        deleted_name:
          description: The Name of the deleted team.
          type: string
      type: object
    AddTimeoutIPInput:
      example:
        hours: 24
        ipaddr: 127.0.0.1
      properties:
        ipaddr:
          description: The IP address or CIDR to add from timeout.
          example: 127.0.0.1
          maxLength: 40
          minLength: 7
          type: string
        hours:
          description: For how many hours to put this IP in timeout.
          example: 24
          maximum: 720
          minimum: 1
          type: integer
      required:
      - hours
      - ipaddr
      type: object
    DeleteTimeoutIPInput:
      example:
        ipaddr: 127.0.0.1
      properties:
        ipaddr:
          description: The IP address or CIDR to remove from timeout.
          example: 127.0.0.1
          maxLength: 40
          minLength: 7
          type: string
      required:
      - ipaddr
      type: object
    IPTimeout:
      example:
        seconds: 1440
        ipaddr: 127.0.0.1
      properties:
        ipaddr:
          description: The CIDR which is in timeout.
          example: 127.0.0.1
          maxLength: 40
          minLength: 7
          type: string
        seconds:
          description: 'How many more seconds this IP block is in timeout '
          example: 1440
          type: integer
      required:
      - ipaddr
      - seconds
      type: object
    AddWorkerTimeout:
      example:
        days: 7
      properties:
        days:
          description: For how many days to put this worker's IP in timeout.
          example: 7
          maximum: 30
          minimum: 1
          type: integer
      required:
      - days
      type: object
    ModelInterrogationInputStable:
      example:
        webhook: https://haidra.net/00000000-0000-0000-0000-000000000000
        source_image: source_image
        forms:
        - payload:
            param:
              key: param
          name: caption
        - payload:
            param:
              key: param
          name: caption
        slow_workers: true
      properties:
        forms:
          items:
            $ref: '#/components/schemas/ModelInterrogationFormStable'
          type: array
        source_image:
          description: The public URL of the image to interrogate.
          type: string
        slow_workers:
          default: true
          description: "When True, allows slower workers to pick up this request.\
            \ Disabling this incurs an extra kudos cost."
          type: boolean
        webhook:
          description: Provide a URL where the AI Horde will send a POST call after
            each delivered generation. The request will include the details of the
            job as well as the request ID.
          example: https://haidra.net/00000000-0000-0000-0000-000000000000
          maxLength: 1024
          minLength: 10
          type: string
      type: object
    ModelInterrogationFormStable:
      example:
        payload:
          param:
            key: param
        name: caption
      properties:
        name:
          description: The type of interrogation this is.
          enum:
          - caption
          - interrogation
          - nsfw
          - GFPGAN
          - RealESRGAN_x4plus
          - RealESRGAN_x2plus
          - RealESRGAN_x4plus_anime_6B
          - NMKD_Siax
          - 4x_AnimeSharp
          - CodeFormers
          - strip_background
          example: caption
          type: string
        payload:
          $ref: '#/components/schemas/ModelInterrogationFormPayloadStable'
      required:
      - name
      type: object
    ModelInterrogationFormPayloadStable:
      example:
        param:
          key: param
      properties:
        param:
          additionalProperties:
            type: string
          type: object
      type: object
    RequestInterrogationResponse:
      example:
        id: id
        message: message
      properties:
        id:
          description: The UUID of the request. Use this to retrieve the request status
            in the future.
          type: string
        message:
          description: Any extra information from the horde about this request.
          type: string
      type: object
    InterrogationStatus:
      example:
        state: state
        forms:
        - result:
            param:
              key: "{}"
          form: form
          state: state
        - result:
            param:
              key: "{}"
          form: form
          state: state
      properties:
        state:
          description: The overall status of this interrogation.
          title: Interrogation State
          type: string
        forms:
          items:
            $ref: '#/components/schemas/InterrogationFormStatus'
          type: array
      type: object
    InterrogationFormStatus:
      example:
        result:
          param:
            key: "{}"
        form: form
        state: state
      properties:
        form:
          description: The name of this interrogation form.
          type: string
        state:
          description: The overall status of this interrogation.
          title: Interrogation State
          type: string
        result:
          $ref: '#/components/schemas/InterrogationFormResult'
      type: object
    InterrogationFormResult:
      example:
        param:
          key: "{}"
      properties:
        param:
          additionalProperties:
            properties: {}
            type: object
          type: object
      type: object
    InterrogationPopInput:
      example:
        priority_usernames:
        - priority_usernames
        - priority_usernames
        amount: 0
        name: name
        threads: 60
        bridge_agent: AI Horde Worker reGen:4.1.0:https://github.com/Haidra-Org/horde-worker-reGen
        max_tiles: 38
        forms:
        - caption
        - caption
      properties:
        name:
          description: The Name of the Worker.
          type: string
        priority_usernames:
          items:
            description: Users with priority to use this worker.
            type: string
          type: array
        forms:
          items:
            description: The type of interrogation this worker can fulfil.
            enum:
            - caption
            - interrogation
            - nsfw
            - GFPGAN
            - RealESRGAN_x4plus
            - RealESRGAN_x2plus
            - RealESRGAN_x4plus_anime_6B
            - NMKD_Siax
            - 4x_AnimeSharp
            - CodeFormers
            - strip_background
            example: caption
            type: string
          type: array
        amount:
          description: The amount of forms to pop at the same time.
          type: integer
        bridge_agent:
          default: unknown
          description: "The worker name, version and website."
          example: AI Horde Worker reGen:4.1.0:https://github.com/Haidra-Org/horde-worker-reGen
          maxLength: 1000
          type: string
        threads:
          description: How many threads this worker is running. This is used to accurately
            the current power available in the horde.
          maximum: 100
          minimum: 1
          type: integer
        max_tiles:
          description: The maximum amount of 512x512 tiles this worker can post-process.
          maximum: 256
          minimum: 1
          type: integer
      type: object
    InterrogationPopPayload:
      example:
        forms:
        - form: caption
          payload:
            param:
              key: param
          source_image: source_image
          r2_upload: r2_upload
          id: id
        - form: caption
          payload:
            param:
              key: param
          source_image: source_image
          r2_upload: r2_upload
          id: id
        skipped:
          bridge_version: 0
          untrusted: 0
          worker_id: 0
      properties:
        forms:
          items:
            $ref: '#/components/schemas/InterrogationPopFormPayload'
          type: array
        skipped:
          $ref: '#/components/schemas/NoValidInterrogationsFound'
      type: object
    InterrogationPopFormPayload:
      example:
        form: caption
        payload:
          param:
            key: param
        source_image: source_image
        r2_upload: r2_upload
        id: id
      properties:
        id:
          description: The UUID of the interrogation form. Use this to post the results
            in the future.
          type: string
        form:
          description: The name of this interrogation form
          enum:
          - caption
          - interrogation
          - nsfw.
          - GFPGAN
          - RealESRGAN_x4plus
          - RealESRGAN_x2plus
          - RealESRGAN_x4plus_anime_6B
          - NMKD_Siax
          - 4x_AnimeSharp
          - CodeFormers
          - strip_background
          example: caption
          type: string
        payload:
          $ref: '#/components/schemas/ModelInterrogationFormPayloadStable'
        source_image:
          description: The URL From which the source image can be downloaded.
          type: string
        r2_upload:
          description: The URL in which the post-processed image can be uploaded.
          type: string
      type: object
    NoValidInterrogationsFound:
      example:
        bridge_version: 0
        untrusted: 0
        worker_id: 0
      properties:
        worker_id:
          description: How many waiting requests were skipped because they demanded
            a specific worker.
          minimum: 0
          type: integer
        untrusted:
          description: How many waiting requests were skipped because they demanded
            a trusted worker which this worker is not.
          minimum: 0
          type: integer
        bridge_version:
          description: How many waiting requests were skipped because they require
            a higher version of the bridge than this worker is running (upgrade if
            you see this in your skipped list).
          example: 0
          minimum: 0
          type: integer
      type: object
    PutNewFilter:
      example:
        regex: ac.param
        filter_type: 10
        description: description
        replacement: ""
      properties:
        regex:
          description: The regex for this filter.
          example: ac.param
          type: string
        filter_type:
          description: The integer defining this filter type.
          example: 10
          maximum: 29
          minimum: 10
          type: integer
        description:
          description: Description about this regex.
          type: string
        replacement:
          default: ""
          description: The replacement string for this regex.
          type: string
      required:
      - filter_type
      - regex
      type: object
    FilterPromptSuspicion:
      example:
        suspicion: "0"
        matches:
        - matches
        - matches
      properties:
        suspicion:
          default: "0"
          description: Rates how suspicious the provided prompt is. A suspicion over
            2 means it would be blocked.
          type: string
        matches:
          items:
            description: Which words in the prompt matched the filters.
            type: string
          type: array
      required:
      - suspicion
      type: object
    FilterDetails:
      example:
        regex: ac.param
        filter_type: 10
        description: description
        id: id
        replacement: ""
        user: user
      properties:
        id:
          description: The UUID of this filter.
          type: string
        regex:
          description: The regex for this filter.
          example: ac.param
          type: string
        filter_type:
          description: The integer defining this filter type.
          example: 10
          maximum: 29
          minimum: 10
          type: integer
        description:
          description: Description about this regex.
          type: string
        replacement:
          default: ""
          description: The replacement string for this regex.
          type: string
        user:
          description: The moderator which added or last updated this regex.
          type: string
      required:
      - filter_type
      - id
      - regex
      - user
      type: object
    FilterRegex:
      example:
        regex: regex
        filter_type: 10
      properties:
        filter_type:
          description: The integer defining this filter type.
          example: 10
          maximum: 29
          minimum: 10
          type: integer
        regex:
          description: The full regex for this filter type.
          type: string
      required:
      - filter_type
      - regex
      type: object
    PatchExistingFilter:
      example:
        regex: ac.param
        filter_type: 10
        description: description
        replacement: ""
      properties:
        regex:
          description: The regex for this filter.
          example: ac.param
          type: string
        filter_type:
          description: The integer defining this filter type.
          example: 10
          maximum: 29
          minimum: 10
          type: integer
        description:
          description: Description about this regex.
          type: string
        replacement:
          default: ""
          description: The replacement string for this regex.
          type: string
      type: object
    StatsImgTotals:
      example:
        total:
          images: 0
          ps: 6
        hour:
          images: 0
          ps: 6
        month:
          images: 0
          ps: 6
        day:
          images: 0
          ps: 6
        minute:
          images: 0
          ps: 6
      properties:
        minute:
          $ref: '#/components/schemas/SinglePeriodImgStat'
        hour:
          $ref: '#/components/schemas/SinglePeriodImgStat'
        day:
          $ref: '#/components/schemas/SinglePeriodImgStat'
        month:
          $ref: '#/components/schemas/SinglePeriodImgStat'
        total:
          $ref: '#/components/schemas/SinglePeriodImgStat'
      type: object
    SinglePeriodImgStat:
      example:
        images: 0
        ps: 6
      properties:
        images:
          description: The amount of images generated during this period.
          type: integer
        ps:
          description: The amount of pixelsteps generated during this period.
          type: integer
      type: object
    ImgModelStats:
      example:
        total:
          param:
            key: 0
        month:
          param:
            key: 0
        day:
          param:
            key: 0
      properties:
        day:
          $ref: '#/components/schemas/SinglePeriodImgModelStats'
        month:
          $ref: '#/components/schemas/SinglePeriodImgModelStats'
        total:
          $ref: '#/components/schemas/SinglePeriodImgModelStats'
      type: object
    SinglePeriodImgModelStats:
      example:
        param:
          key: 0
      properties:
        param:
          additionalProperties:
            description: The amount of requests fulfilled for this model.
            type: integer
          type: object
      type: object
    StatsTxtTotals:
      example:
        total:
          images: 0
          ps: 6
        hour:
          images: 0
          ps: 6
        month:
          images: 0
          ps: 6
        day:
          images: 0
          ps: 6
        minute:
          images: 0
          ps: 6
      properties:
        minute:
          $ref: '#/components/schemas/SinglePeriodImgStat'
        hour:
          $ref: '#/components/schemas/SinglePeriodImgStat'
        day:
          $ref: '#/components/schemas/SinglePeriodImgStat'
        month:
          $ref: '#/components/schemas/SinglePeriodImgStat'
        total:
          $ref: '#/components/schemas/SinglePeriodImgStat'
      type: object
    TxtModelStats:
      example:
        total:
          param:
            key: 0
        month:
          param:
            key: 0
        day:
          param:
            key: 0
      properties:
        day:
          $ref: '#/components/schemas/SinglePeriodTxtModelStats'
        month:
          $ref: '#/components/schemas/SinglePeriodTxtModelStats'
        total:
          $ref: '#/components/schemas/SinglePeriodTxtModelStats'
      type: object
    SinglePeriodTxtModelStats:
      example:
        param:
          key: 0
      properties:
        param:
          additionalProperties:
            description: The amount of requests fulfilled for this model.
            type: integer
          type: object
      type: object
    post_filters_request:
      properties:
        prompt:
          type: string
        filter_type:
          type: integer
      type: object
    post_interrogate_submit_request:
      properties:
        id:
          type: string
        result:
          type: string
        state:
          type: string
      type: object
    post_award_kudos_request:
      properties:
        username:
          type: string
        amount:
          type: integer
      type: object
    put_horde_modes_request:
      properties:
        maintenance:
          type: boolean
        invite_only:
          type: boolean
        raid:
          type: boolean
      type: object
x-original-swagger-version: "2.0"

